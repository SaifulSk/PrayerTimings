{"version":3,"file":"static/js/Home.387f6141.chunk.js","mappings":"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","sources":["_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","pages/home/components/SetLocationModal.tsx","_common/components/form-elements/radioinput/radioInput.tsx","_common/components/form-elements/datepicker/dateInput.tsx","pages/home/components/StartEndTimeModal.tsx","pages/home/components/TimingTypes/DaywiseTiming.tsx","pages/home/components/TimingTypes/WeekwiseTiming.tsx","pages/home/components/TimingTypes/MonthwiseTiming.tsx","pages/home/components/NamajTimingForm.tsx","pages/home/components/AzanModal.tsx","pages/home/components/UpcomingPrayerTime.tsx","pages/home/home.tsx"],"sourcesContent":["// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#0a9246' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#000',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { LOCATIONS } from '../../../config';\r\n\r\ninterface SetLocationModalProps {\r\n    onClose: () => void;\r\n    shouldShow: boolean;\r\n}\r\n\r\ninterface SetLocationModalValues {\r\n    location: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    location: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function SetLocationModal({ onClose, shouldShow }: SetLocationModalProps) {\r\n    \r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<SetLocationModalValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            location: undefined,\r\n        },\r\n    })\r\n\r\n    const onSubmit = (values: any) => {\r\n        localStorage.setItem(\"location\",JSON.stringify(values.location))\r\n        onClose()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(loc) {\r\n            setValue(\"location\", JSON.parse(loc))\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Set Location\r\n                    <button type=\"button\" className=\"\" onClick={onClose} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"location\"\r\n                        render={({\r\n                            field: { onChange, onBlur, value, name, ref },\r\n                            fieldState: { invalid, isTouched, isDirty, error },\r\n                            formState,\r\n                        }) => (\r\n                            <SelectInput\r\n                                name={name}\r\n                                onChange={onChange}\r\n                                onBlur={onBlur}\r\n                                inputRef={ref}\r\n                                options={LOCATIONS}\r\n                                value={value}\r\n                                placeholder=\"Select location\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={handleSubmit(onSubmit)}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport '../form-elem.css'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface RadioInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur: () => void;\r\n  options: OptionValue[];\r\n  value: string | undefined;\r\n  name: string;\r\n  inputRef: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  id?: string;\r\n}\r\n\r\n\r\nfunction RadioInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  options,\r\n}: RadioInputProps) {\r\n  return (\r\n    <div>\r\n      <div className=\"radio-wrapper\">\r\n      {\r\n        options.map((opt, index) => {\r\n          return <label key={index} className=\"container-radio\" >\r\n            {opt.label}\r\n            <input\r\n              type=\"radio\"\r\n              checked={value == opt.value}\r\n              name={name}\r\n              value={opt.value}\r\n              onChange={(evt) => {\r\n                onChange(evt.target.value)\r\n              }}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n        })\r\n      }\r\n      </div>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioInput\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport '../form-elem.css'\r\nimport classnames from 'classnames'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface DateInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value: Date | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  error?: any;\r\n  id?: string;\r\n  maxDate?: Date;\r\n  minDate?: Date;\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n  showMonthYearPicker?: any;\r\n  showWeekNumbers?: any;\r\n  showWeekPicker?: any;\r\n}\r\n\r\nfunction DateInput({\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  dateFormat,\r\n  maxDate,\r\n  minDate,\r\n  disabled,\r\n  dark,\r\n  showMonthYearPicker,\r\n  showWeekNumbers,\r\n  showWeekPicker,\r\n}: DateInputProps) {\r\n\r\n  const datePickerContainerClass = classnames({\r\n    'ne-datepicker-container': true,\r\n    'dark': dark,\r\n  })\r\n\r\n  return (\r\n    <div className={datePickerContainerClass}>\r\n      <DatePicker\r\n        selected={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        // onFocus={onFocus ? onFocus : () => { }}\r\n        onFocus={e => e.target.blur()}\r\n        placeholderText={placeholder}\r\n        name={name}\r\n        id={id}\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        maxDate={maxDate}\r\n        minDate={minDate}\r\n        // showYearDropdown\r\n        dateFormat={dateFormat}\r\n        className=\"form-control\"\r\n        autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        showMonthYearPicker={showMonthYearPicker}\r\n        showWeekNumbers={showWeekNumbers}\r\n        showWeekPicker={showWeekPicker}\r\n      />\r\n      <i className=\"date-icon\"></i>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport parse from 'html-react-parser'\r\nimport data from '../../../config/data/data.json'\r\nimport moment from 'moment';\r\n\r\ninterface StartEndTimeModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    formValues: any;\r\n}\r\n\r\n\r\nexport default function StartEndTimeModal({ onSuccess, onClose, shouldShow, formValues }: StartEndTimeModalProps) {\r\n\r\n    const [message, setMessage] = useState<string>(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(formValues) {\r\n            const day = moment(formValues.date).format(\"D\")\r\n            const month = moment(formValues.date).format(\"MMMM\")\r\n            const waqt = formValues.waqt.value\r\n            let x:any = data\r\n            let msg = \"<p>\"\r\n            // if(x[month][day][waqt][\"Start\"]) {\r\n                msg = msg + \"Start: <span>\" + moment(x[month][day][waqt][\"Start\"], \"HH:mm\").format(\"h:mm a\") + \"</span><br/>End: <span>\" + (x[month][day][waqt][\"End\"] ? moment(x[month][day][waqt][\"End\"], \"HH:mm\").format(\"h:mm a\") : \"Until Next Waqt\") + \"</span>\"\r\n            // }\r\n            // if(x[month][day][waqt][\"End\"]) {\r\n                // msg = msg + \"End: <span>\" + x[month][day][waqt][\"End\"] + \"</span>\"\r\n            // }\r\n            msg = msg + \"</p>\"\r\n            setMessage(msg)\r\n        }\r\n    },[formValues])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {moment(formValues.date).format(\"D MMMM \")+formValues?.waqt?.value+\" Timings\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        {parse(message)}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport DateInput from '../../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../../config';\r\nimport StartEndTimeModal from '../StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../../config/functions';\r\n\r\ninterface DaywiseTimingValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst DaywiseTimingSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function DaywiseTiming() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<DaywiseTimingValues>({\r\n        resolver: yupResolver(DaywiseTimingSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let y = getCurrentWaqt()\r\n        setValue(\"waqt\",{value:y,label:y})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Date</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e:any) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    dateFormat={\"dd-MMMM-yyyy\"}\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Date\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport DateInput from '../../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../../config';\r\nimport StartEndTimeModal from '../StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../../config/functions';\r\n\r\ninterface WeekwiseTimingValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst WeekwiseTimingSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function WeekwiseTiming() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<WeekwiseTimingValues>({\r\n        resolver: yupResolver(WeekwiseTimingSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let y = getCurrentWaqt()\r\n        setValue(\"waqt\",{value:y,label:y})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Week</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e:any) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    dateFormat=\"I/R\"\r\n                                    showWeekNumbers\r\n                                    showWeekPicker\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Date\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport DateInput from '../../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../../config';\r\nimport StartEndTimeModal from '../StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../../config/functions';\r\n\r\ninterface MonthwiseTimingValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst MonthwiseTimingSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function MonthwiseTiming() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<MonthwiseTimingValues>({\r\n        resolver: yupResolver(MonthwiseTimingSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    const renderMonthContent = (month: any, shortMonth: any, longMonth: any, day: any) => {\r\n        const fullYear = new Date(day).getFullYear();\r\n        const tooltipText = `Tooltip for month: ${longMonth} ${fullYear}`;\r\n    \r\n        return <span title={tooltipText}>{shortMonth}</span>;\r\n      };\r\n    \r\n    useEffect(()=>{\r\n        let y = getCurrentWaqt()\r\n        setValue(\"waqt\",{value:y,label:y})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Month</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e:any) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    // selected={new Date()}\r\n                                    showMonthYearPicker\r\n                                    dateFormat=\"MM/yyyy\"\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Month\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport FormTextInput from '../../../_common/components/form-elements/textinput/formTextInput';\r\nimport DateInput from '../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { TIMING_VIEW_OPTIONS, WAQT_OPTIONS } from '../../../config';\r\nimport StartEndTimeModal from './StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../config/functions';\r\nimport SetLocationModal from './SetLocationModal';\r\nimport RadioInput from '../../../_common/components/form-elements/radioinput/radioInput';\r\nimport DaywiseTiming from './TimingTypes/DaywiseTiming';\r\nimport WeekwiseTiming from './TimingTypes/WeekwiseTiming';\r\nimport MonthwiseTiming from './TimingTypes/MonthwiseTiming';\r\n\r\ninterface NamajTimingFormValues {\r\n    type: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function NamajTimingForm() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<NamajTimingFormValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            type: 'Daywise',\r\n        },\r\n    })\r\n\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [selectedTimingType, setSelectedTimingType] = useState<any>('Daywise')\r\n\r\n    const radioChange = (e:any) => {\r\n        setSelectedTimingType(e)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">\r\n                Prayer Timings\r\n                <a style={{right: \"15px\",position: \"absolute\"}} onClick={()=>{setShowSetLocationModal(true)}}>\r\n                    <i className=\"fa-solid fa-location-dot\" />\r\n                </a>\r\n            </h2>    \r\n            <div className=\"mb-3 text-white\">\r\n                <label className=\"form-label\">Type</label>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"type\"\r\n                    render={({\r\n                        field: { onChange, onBlur, value, name, ref },\r\n                        fieldState: { invalid, isTouched, isDirty, error },\r\n                        formState,\r\n                    }) => (\r\n                        <RadioInput\r\n                            name={name}\r\n                            onChange={(e:any)=>{\r\n                                onChange(e)\r\n                                radioChange(e)\r\n                            }}\r\n                            onBlur={onBlur}\r\n                            inputRef={ref}\r\n                            options={TIMING_VIEW_OPTIONS}\r\n                            value={value}\r\n                            // error={errors.waqt}\r\n                        />\r\n                    )}\r\n                />\r\n            </div> \r\n            {selectedTimingType==\"Daywise\" ?\r\n                <DaywiseTiming />\r\n                : \r\n                selectedTimingType==\"Weekwise\" ?\r\n                    <WeekwiseTiming />\r\n                    :\r\n                    <MonthwiseTiming />\r\n            }\r\n            {   showSetLocationModal &&\r\n                <SetLocationModal\r\n                    shouldShow={showSetLocationModal}\r\n                    onClose={onCloseSetLocationModal}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\ninterface AzanModalProps {\r\n    shouldShow: boolean;\r\n    closeAzanModal: Function;\r\n    waqt: string;\r\n}\r\n\r\nexport default function AzanModal({ shouldShow, closeAzanModal, waqt }: AzanModalProps) {\r\n\r\n    const vidRef:any = useRef(null)\r\n    const [crossActive, setCrossActive] = useState<boolean>(false)\r\n\r\n    const btnClicked = () => {\r\n        console.log(\"Clicked\")\r\n        // let x:any=document.getElementById(\"azanVid\")\r\n        var playButton = document.getElementById(\"play_button\");\r\n        let video: any = vidRef?.current\r\n        if(video && playButton) {\r\n        //     if(type==\"on\") {\r\n        //         x.muted = false\r\n        //     } else {\r\n        //         x.muted = false\r\n        //     }\r\n        // }        \r\n            // Event listener for the play/pause button\r\n            if (video.paused == true) {\r\n                // Play the video\r\n                video.play();\r\n\r\n                // Update the button text to 'Pause'\r\n                playButton.innerHTML = \"Pause\";\r\n            } else {\r\n                // Pause the video\r\n                video.pause();\r\n\r\n                // Update the button text to 'Play'\r\n                playButton.innerHTML = \"Play\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const vidClicked = () => {\r\n        let video: any = vidRef?.current\r\n        if(video) {\r\n            video.muted = false\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setCrossActive(true)\r\n        //     let x:any=document.getElementById(\"play_button\")\r\n        //     if(x) {\r\n        //         x.click()\r\n        //     }\r\n        //     // let x:any=document.getElementById(\"azanVid\")\r\n        //     // if(x) {\r\n        //     //     x.play()\r\n        //     // }\r\n        },15000)\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {waqt} Azan\r\n                    {crossActive && <button type=\"button\" className=\"\" onClick={()=>closeAzanModal()} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <video width=\"100%\" id=\"azanVid\" preload='auto'\r\n                            autoPlay\r\n                            muted={true}\r\n                            onClick={()=>vidClicked()}\r\n                            onEnded={()=>closeAzanModal()} ref={vidRef}>\r\n                            {waqt==\"Fajr\" ?\r\n                                <source src=\"images/FajrAzan.mp4\" type=\"video/mp4\" />\r\n                                :\r\n                                <source src=\"images/Azan.mp4\" type=\"video/mp4\" />\r\n                            }\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                        {vidRef?.current?.muted==true && <h4 className=\"msg-text\">Click the above video to listen to the Adhan</h4>}\r\n                        {/* <button id=\"play_button\" onClick={()=>btnClicked()}>Play</button> */}\r\n                        {/* <i className=\"fa fa-volume-up\" onClick={()=>btnClicked(\"on\")}/> */}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport data from '../../../config/data/data.json'\r\nimport moment from 'moment';\r\nimport getCurrentWaqt from '../../../config/functions';\r\nimport AzanModal from './AzanModal';\r\nimport { WAQT_NAMAJ } from '../../../config';\r\nimport parse from 'html-react-parser'\r\n\r\nexport default function UpcomingPrayerTime({type}:any) {\r\n    const [upcomingTime, setUpcomingTime] = useState<any>()\r\n    const [waqt, setWaqt] = useState<any>()\r\n    const [remainingTime, setRemainingTime] = useState<any>()\r\n    const [intervalId, setIntervalId] = useState<any>()\r\n    const [showAzanModal, setShowAzanModal] = useState<boolean>(false)\r\n    const [showCurrentWaqt, setShowCurrentWaqt] = useState<boolean>(false)\r\n    const dataa:any = data\r\n    const namaj:any = WAQT_NAMAJ\r\n\r\n    const pad = (num: any) => {\r\n        return (\"0\"+num).slice(-2)\r\n    }\r\n    const hhmmss = (secs: any) => {\r\n      var minutes = Math.floor(secs / 60)\r\n      secs = secs%60\r\n      var hours = Math.floor(minutes/60)\r\n      minutes = minutes%60\r\n      return `${pad(hours)}:${pad(minutes)}:${pad(secs)}`\r\n      // return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs) for old browsers\r\n    }\r\n\r\n    const openAzanModal = () => {\r\n        setShowAzanModal(true)\r\n    }\r\n\r\n    const closeAzanModal = () => {\r\n        setShowAzanModal(false)\r\n        // window.location.reload()\r\n        findUpcomingWaqt()\r\n    }\r\n    \r\n    const findUpcomingWaqt = () => {\r\n        \r\n        let currentDate = moment()\r\n\r\n        let day = currentDate.format(\"D\")\r\n        let month = currentDate.format(\"MMMM\")\r\n\r\n        let x:any = data\r\n        let y = getCurrentWaqt()\r\n        let waqts = Object.keys(x[month][day])\r\n        let i = waqts.indexOf(y)\r\n        if(i==(waqts.length-1)) {\r\n            y=waqts[0]\r\n            let t = currentDate.format(\"HH:mm\")\r\n            if(t>\"22:00\") {\r\n                day = moment().add(1,'days').format(\"D\")\r\n                month = moment().add(1,'days').format(\"MMMM\")\r\n            }\r\n        } else {\r\n            y=waqts[i+1]\r\n        }\r\n        setWaqt(y)\r\n        console.log(month,day)\r\n        let tm = moment(x[month][day][y][\"Start\"], \"HH:mm\").format(\"h:mm a\")\r\n        setUpcomingTime(tm)\r\n        countDown(tm)\r\n        return tm\r\n    }\r\n\r\n    const countDown = (tm: any) => {\r\n        let sec = (moment(tm,\"h:mm a\").diff(moment(),'seconds')+86400)%86400\r\n        // let sec = 3\r\n        console.log({sec})\r\n        let id=setInterval(()=>{\r\n            setIntervalId(id)\r\n            setRemainingTime(hhmmss(sec))\r\n            sec--\r\n            if(sec<0) {\r\n                clearInterval(id)\r\n                openAzanModal()\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        let cWaqt = getCurrentWaqt()\r\n        let uWaqt = findUpcomingWaqt()\r\n        let diff = dataa[moment().format(\"MMMM\")][moment().format(\"D\")][cWaqt][\"End\"] ? moment().diff(moment(dataa[moment().format(\"MMMM\")][moment().format(\"D\")][cWaqt][\"End\"], \"HH:mm\")) : moment().diff(moment(uWaqt,\"h:mm a\").subtract(1,\"minutes\"))\r\n        console.log({diff})\r\n        if(diff<0) {\r\n            setShowCurrentWaqt(true)\r\n        } else {\r\n            \r\n        }\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showCurrentWaqt\r\n                ?\r\n                <>\r\n                    {getCurrentWaqt()!=\"Tahajjud\" && \r\n                        <>\r\n                            <h3 className=\"page-title\">{getCurrentWaqt()} Prayers</h3>\r\n                            {namaj[getCurrentWaqt()].map((x:any, i: any)=>\r\n                                <div className=\"content text-white\" key={i}>\r\n                                    {parse(x)}\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    }\r\n                    <div className=\"highlight-text content\">\r\n                        Current Waqt <span>({getCurrentWaqt()})</span> ends at <span>{dataa[moment().format(\"MMMM\")][moment().format(\"D\")][getCurrentWaqt()][\"End\"] ? moment(dataa[moment().format(\"MMMM\")][moment().format(\"D\")][getCurrentWaqt()][\"End\"], \"HH:mm\").format(\"h:mm a\") : moment(upcomingTime,\"h:mm a\").subtract(1,\"minutes\").format(\"h:mm a\")}</span>\r\n                    </div>\r\n                </>\r\n                : null\r\n            }\r\n            <h3 className=\"page-title\">Upcoming Prayer</h3>\r\n            <div className=\"content text-white\">\r\n                Waqt: <span>{waqt}</span>\r\n            </div>\r\n            <div className=\"content text-white\">\r\n                Time: <span>{upcomingTime}</span>\r\n            </div>\r\n            <div className=\"content text-white\">\r\n                Time Left: <span>{remainingTime}</span>\r\n            </div>\r\n            \r\n            {\r\n                showAzanModal && waqt && waqt!=\"Tahajjud\" &&\r\n                <AzanModal\r\n                    shouldShow={showAzanModal}\r\n                    closeAzanModal={closeAzanModal}\r\n                    waqt={waqt}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport NamajTimingForm from './components/NamajTimingForm';\r\nimport Sidebar from '../common/Sidebar';\r\nimport UpcomingPrayerTime from './components/UpcomingPrayerTime';\r\nimport Insights from './components/Insights';\r\nimport InsightsModal from './components/InsightsModal';\r\n\r\nexport default function Home() {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <NamajTimingForm />\r\n                {/* <UpcomingPrayerTime type=\"current\"/> */}\r\n                <UpcomingPrayerTime />\r\n                {/* <div className=\"btn-wrap\">\r\n                    <button className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\" onClick={()=>setShowInsightsModal(true)}>Insights of the Day</button>\r\n                </div> */}\r\n                {/* <Insights />\r\n                <Insights type=\"Hadith\" /> */}\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"],"names":["option","provided","state","backgroundColor","isSelected","color","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","placeholder","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","label","otherKey","value","filter","opt","toLowerCase","startsWith","length","onChange","onBlur","name","inputRef","error","id","className","isClearable","isSearchable","isDisabled","dark","undefined","styles","stylesDark","ref","components","IndicatorSeparator","filterOption","InputValue","message","Form","type","NamajTimingSchema","yup","shape","location","nullable","SetLocationModal","onClose","shouldShow","useForm","resolver","yupResolver","defaultValues","setValue","formState","errors","handleSubmit","useEffect","loc","localStorage","getItem","JSON","parse","Modal","show","backdrop","keyboard","centered","contentClassName","onClick","style","background","border","render","field","fieldState","invalid","isTouched","isDirty","LOCATIONS","values","setItem","stringify","map","index","checked","evt","target","onFocus","dateFormat","maxDate","minDate","disabled","showMonthYearPicker","showWeekNumbers","showWeekPicker","datePickerContainerClass","classnames","selected","e","blur","placeholderText","autoComplete","uuidv4","StartEndTimeModal","onSuccess","formValues","useState","setMessage","day","moment","date","format","month","waqt","x","data","msg","DaywiseTimingSchema","DaywiseTiming","Date","showStartEndTimeModal","setShowStartEndTimeModal","setFormValues","y","getCurrentWaqt","onSubmit","console","log","noValidate","WAQT_OPTIONS","WeekwiseTimingSchema","WeekwiseTiming","MonthwiseTimingSchema","MonthwiseTiming","NamajTimingForm","showSetLocationModal","setShowSetLocationModal","selectedTimingType","setSelectedTimingType","right","position","radioChange","TIMING_VIEW_OPTIONS","AzanModal","closeAzanModal","vidRef","useRef","crossActive","setCrossActive","setTimeout","width","preload","autoPlay","muted","video","current","vidClicked","onEnded","src","UpcomingPrayerTime","upcomingTime","setUpcomingTime","setWaqt","remainingTime","setRemainingTime","intervalId","setIntervalId","showAzanModal","setShowAzanModal","showCurrentWaqt","setShowCurrentWaqt","dataa","namaj","WAQT_NAMAJ","pad","num","slice","findUpcomingWaqt","currentDate","waqts","Object","keys","i","indexOf","add","tm","countDown","sec","diff","setInterval","secs","minutes","Math","floor","hours","hhmmss","clearInterval","cWaqt","uWaqt","subtract","Home","Sidebar"],"sourceRoot":""}