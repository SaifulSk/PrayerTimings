{"version":3,"file":"static/js/TasbihCounter.8548a8ed.chunk.js","mappings":"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","sources":["pages/common/ConfirmModal.tsx","pages/home/components/RamadanModal.tsx","pages/common/Sidebar.tsx","pages/tasbihCounter/components/Counter.tsx","pages/tasbihCounter/components/Zikr.tsx","pages/tasbihCounter/tasbihCounter.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"msg-text\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\ninterface RamadanModalProps {\r\n    shouldShow: boolean;\r\n    setShowRamadanModal: Function;\r\n}\r\n\r\nexport default function RamadanModal({ shouldShow, setShowRamadanModal }: RamadanModalProps) {\r\n\r\n    const [day, setDay] = useState<any>()\r\n\r\n    useEffect(()=>{\r\n        let today = moment()\r\n        let firstDay = moment(\"24-03\",\"DD-MM\")\r\n        setDay(today.diff(firstDay,'days') + 1)\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Ramadan Day {day}\r\n                    <button type=\"button\" className=\"\" onClick={() => setShowRamadanModal(false)} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        {/* <img className=\"ramadan-day-img\" src={\"/PrayerTimings/images/ramadan.webp\"} /> */}\r\n                        <img className=\"ramadan-day-img\" src={\"http://www.quranreading.com/blog/wp-content/uploads/2014/07/\"+day+\".png\"} />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        let date = localStorage.getItem(\"ramadanDate\")\r\n        let d = moment(new Date()).format(\"DD-MM\")\r\n        if(date) {\r\n            if(d!=date) {\r\n                setShowRamadanModal(true)\r\n                localStorage.setItem(\"ramadanDate\", d)\r\n            }\r\n        } else {\r\n            setShowRamadanModal(true)\r\n            localStorage.setItem(\"ramadanDate\", d)\r\n        }\r\n        // setShowRamadanModal(true)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(showRamadanModal) {\r\n            setTimeout(()=>{\r\n                setShowRamadanModal(false)\r\n            },30000)\r\n        }\r\n    },[showRamadanModal])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.NAMES_OF_ALLAH}>99 Names Of Allah</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Hadiths</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => {toogleSideBarOnOff(false);window.open(\"/PrayerTimings/qaida.pdf\", \"_blank\")}}>\r\n                        {/* <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link> */}\r\n                        <a>Learn Arabic</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Names</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n\r\n            { showRamadanModal &&\r\n                <RamadanModal\r\n                    shouldShow={showRamadanModal}\r\n                    setShowRamadanModal={setShowRamadanModal}\r\n                />\r\n            }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Counter() {\r\n\r\n    const [value, setValue] = useState<number>(0)\r\n    \r\n    useEffect(()=>{\r\n        \r\n        let c=Number(localStorage.getItem(\"tasbihCount\"))\r\n\r\n        if(c>0) {\r\n            setValue(c)\r\n        }\r\n\r\n        return () => {\r\n            // console.log(\"Out\",value)\r\n        }\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"tasbihCount\",String(value))\r\n    },[value])\r\n    \r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">Tasbih Counter</h2>\r\n            <span className=\"count-val\">{value}</span>\r\n            <div className=\"plus-btn-wrap\">\r\n                <a onClick={()=>setValue(value+1)}><i className=\"fa fa-plus\"/></a>\r\n            </div>\r\n            {(value>0) &&\r\n                <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                    <a onClick={()=>setValue(0)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { ZIKRS } from '../../../config'\r\n\r\nexport default function Zikr() {\r\n\r\n    const totalZikrs = Array.from({length: 12}, (_, i) => i + 1)\r\n\r\n    const [zikrCounts, setZikrCounts] = useState<any>(Array.from({length: 12}, (_, i) => 0))\r\n\r\n    const changeCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = x[item-1] + 1\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    const resetCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = 0\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let val = localStorage.getItem(\"zikr\")\r\n        if(val) {\r\n            setZikrCounts(JSON.parse(val))\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"page-title\">Zikr Counters</h3>\r\n            {totalZikrs.map((x:any)=>\r\n                <>\r\n                    <h4>{x}. {Object.keys(ZIKRS)[x-1]}</h4>\r\n                    <div className=\"zikr-wrap\">\r\n                        <div className=\"zikr-img\">\r\n                            <img src={\"images/Zikr/\"+x+\".png\"} />\r\n                        </div>\r\n                        <div className=\"zikr-meaning\">{Object.values(ZIKRS)[x-1]}</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <span className=\"count-val\">{zikrCounts[x-1]}</span>\r\n                            </div>\r\n                            <div className={\"col-\"+(zikrCounts[x-1]>0 ? \"3\" : \"6\")}>\r\n                                <div className=\"plus-btn-wrap\">\r\n                                    <a onClick={()=>changeCount(x)}><i className=\"fa fa-plus\"/></a>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                zikrCounts[x-1]>0 ?\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                                            <a onClick={()=>resetCount(x)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\nimport Counter from './components/Counter'\r\nimport Zikr from './components/Zikr'\r\n\r\nexport default function TasbihCounter() {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <Counter />       \r\n                <Zikr />\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","RamadanModal","setShowRamadanModal","useState","day","setDay","useEffect","today","moment","firstDay","diff","style","background","border","color","src","showConfirmModal","setShowConfirmModal","showRamadanModal","navigate","useNavigate","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","localStorage","getItem","setItem","JSON","stringify","label","value","date","d","Date","format","setTimeout","id","overflow","fontWeight","to","URLS","href","target","window","open","alt","Counter","setValue","c","Number","String","Zikr","totalZikrs","Array","from","length","_","i","zikrCounts","setZikrCounts","val","parse","map","x","Object","keys","ZIKRS","values","item","changeCount","resetCount","TasbihCounter","Sidebar"],"sourceRoot":""}