{"version":3,"file":"static/js/TasbihCounter.490ab46a.chunk.js","mappings":"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","sources":["pages/common/ConfirmModal.tsx","pages/home/components/Insights.tsx","pages/home/components/InsightsModal.tsx","pages/common/Sidebar.tsx","pages/tasbihCounter/components/Counter.tsx","pages/tasbihCounter/components/Zikr.tsx","pages/tasbihCounter/tasbihCounter.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"msg-text\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\ninterface InsightsProps {\r\n    type?: string\r\n}\r\n\r\nexport default function Insights({type}: InsightsProps) {\r\n\r\n    return (\r\n        <>\r\n            <h4 className='msg-text'>{type || \"Qur'an\"}</h4>\r\n            <div style={{ height: 230,  textAlign: \"center\" }}>\r\n                <iframe\r\n                    src={\"https://alim.org/\"+(type?.toLowerCase() || \"insight\")+\"-of-the-day/widget/\"}\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    // style={{ border: \"none\" }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\nimport Insights from './Insights';\r\n\r\ninterface InsightsModalProps {\r\n    shouldShow: boolean;\r\n    setShowInsightsModal: Function;\r\n}\r\n\r\nexport default function InsightsModal({ shouldShow, setShowInsightsModal }: InsightsModalProps) {\r\n\r\n    useEffect(()=>{\r\n        let x:any=document.getElementById(\"azan\")\r\n        if(x) {\r\n            x.play()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Insights of the Day\r\n                    <button type=\"button\" className=\"\" onClick={() => setShowInsightsModal(false)} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <Insights />\r\n                        <Insights type=\"Hadith\" />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\nimport InsightsModal from '../home/components/InsightsModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const [showInsightsModal, setShowInsightsModal] = useState<boolean>(false)\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        // let date = localStorage.getItem(\"ramadanDate\")\r\n        // let d = moment(new Date()).format(\"DD-MM\")\r\n        // if(date) {\r\n        //     if(d!=date) {\r\n        //         setShowRamadanModal(true)\r\n        //         localStorage.setItem(\"ramadanDate\", d)\r\n        //     }\r\n        // } else {\r\n        //     setShowRamadanModal(true)\r\n        //     localStorage.setItem(\"ramadanDate\", d)\r\n        // }\r\n        // // setShowRamadanModal(true)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // if(showRamadanModal) {\r\n        //     setTimeout(()=>{\r\n        //         setShowRamadanModal(false)\r\n        //     },30000)\r\n        // }\r\n    },[showRamadanModal])\r\n\r\n    useEffect(()=>{\r\n        let day = localStorage.getItem(\"day\")\r\n        let today = (new Date()).getDate()+\"\"\r\n        if(day) {\r\n            if(today!=day) {\r\n                setShowInsightsModal(true)\r\n                localStorage.setItem(\"day\",today)\r\n            }\r\n        } else {\r\n            setShowInsightsModal(true)\r\n            localStorage.setItem(\"day\",today)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-close\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.NAMES_OF_ALLAH}>99 Names Of Allah</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Hadiths</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://myislam.org/qibla-ar\" target=\"_blank\">Qibla Direction</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.DUAS}>Duas</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://www.youtube.com/playlist?list=PLqIZQ02Yb0hmre39-7qk-4e3-eJ4WtM1c\" target=\"_blank\">Prophets' Life Videos</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => {toogleSideBarOnOff(false);window.open(\"/PrayerTimings/qaida.pdf\", \"_blank\")}}>\r\n                        {/* <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link> */}\r\n                        <a>Learn Arabic</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Names</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.png\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"insight-btn-wrap\">\r\n                <button className=\"btn insight-btn\" onClick={()=>setShowInsightsModal(true)}>Insights of the Day</button>\r\n            </div>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must for opening Al Qur'an. Have you done wudu?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            {\r\n                showInsightsModal && \r\n                <InsightsModal\r\n                    shouldShow={showInsightsModal}\r\n                    setShowInsightsModal={setShowInsightsModal}\r\n                />\r\n            }\r\n\r\n            {/* { showRamadanModal &&\r\n                <RamadanModal\r\n                    shouldShow={showRamadanModal}\r\n                    setShowRamadanModal={setShowRamadanModal}\r\n                />\r\n            } */}\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Counter() {\r\n\r\n    const [value, setValue] = useState<number>(0)\r\n    \r\n    useEffect(()=>{\r\n        \r\n        let c=Number(localStorage.getItem(\"tasbihCount\"))\r\n\r\n        if(c>0) {\r\n            setValue(c)\r\n        }\r\n\r\n        return () => {\r\n            // console.log(\"Out\",value)\r\n        }\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"tasbihCount\",String(value))\r\n    },[value])\r\n    \r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">Tasbih Counter</h2>\r\n            <span className=\"count-val\">{value}</span>\r\n            <div className=\"plus-btn-wrap\">\r\n                <a onClick={()=>setValue(value+1)}><i className=\"fa fa-plus\"/></a>\r\n            </div>\r\n            {(value>0) &&\r\n                <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                    <a onClick={()=>setValue(0)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { ZIKRS } from '../../../config'\r\n\r\nexport default function Zikr() {\r\n\r\n    const totalZikrs = Array.from({length: 12}, (_, i) => i + 1)\r\n\r\n    const [zikrCounts, setZikrCounts] = useState<any>(Array.from({length: 12}, (_, i) => 0))\r\n\r\n    const changeCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = x[item-1] + 1\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    const resetCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = 0\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let val = localStorage.getItem(\"zikr\")\r\n        if(val) {\r\n            setZikrCounts(JSON.parse(val))\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"page-title\">Zikr Counters</h3>\r\n            <div className=\"desc-text\">The remembrance of Allah. The effort of total concentration with sincerity on God, to realise His nearness and company, and removing all other thoughts is called zikr. Everything which can be instrumental in invoking God, such as a name, a sign, an act, a word, a prayer, or recitations of the Holy Quran, or invoking blessings on the Holy Quran, or invoking blessings on the Holy Prophet (durood sharif), or entreaties, or spiritual conditions and similar acts which enhance the remembrance of the beloved and increase communion with Him, are covered by the term zikr.</div>\r\n            {totalZikrs.map((x:any)=>\r\n                <>\r\n                    <h4>{x}. {Object.keys(ZIKRS)[x-1]}</h4>\r\n                    <div className=\"zikr-wrap\">\r\n                        <div className=\"zikr-img\">\r\n                            <img src={\"images/Zikr/\"+x+\".png\"} />\r\n                        </div>\r\n                        <div className=\"zikr-meaning\">{Object.values(ZIKRS)[x-1]}</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <span className=\"count-val\">{zikrCounts[x-1]}</span>\r\n                            </div>\r\n                            <div className={\"col-\"+(zikrCounts[x-1]>0 ? \"3\" : \"6\")}>\r\n                                <div className=\"plus-btn-wrap\">\r\n                                    <a onClick={()=>changeCount(x)}><i className=\"fa fa-plus\"/></a>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                zikrCounts[x-1]>0 ?\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                                            <a onClick={()=>resetCount(x)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\nimport Counter from './components/Counter'\r\nimport Zikr from './components/Zikr'\r\n\r\nexport default function TasbihCounter() {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <Counter />       \r\n                <Zikr />\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","Insights","style","height","textAlign","src","toLowerCase","width","InsightsModal","setShowInsightsModal","useEffect","x","document","getElementById","play","background","border","color","useState","showConfirmModal","setShowConfirmModal","showRamadanModal","navigate","useNavigate","showInsightsModal","toogleSideBarOnOff","status","sidebarCollapseElement","sidebarElement","overlayElement","classList","add","remove","localStorage","getItem","setItem","JSON","stringify","label","value","day","today","Date","getDate","id","overflow","fontWeight","to","URLS","href","target","window","open","alt","Counter","setValue","c","Number","String","Zikr","totalZikrs","Array","from","length","_","i","zikrCounts","setZikrCounts","val","parse","map","Object","keys","ZIKRS","values","item","changeCount","resetCount","TasbihCounter","Sidebar"],"sourceRoot":""}