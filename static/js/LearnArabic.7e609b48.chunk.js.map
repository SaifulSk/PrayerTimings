{"version":3,"file":"static/js/LearnArabic.7e609b48.chunk.js","mappings":"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","sources":["pages/common/ConfirmModal.tsx","pages/home/components/Insights.tsx","pages/home/components/InsightsModal.tsx","pages/common/Sidebar.tsx","_common/hooks/common/appToasterHook.tsx","pages/learnArabic/learnArabic.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"msg-text\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\ninterface InsightsProps {\r\n    type?: string\r\n}\r\n\r\nexport default function Insights({type}: InsightsProps) {\r\n\r\n    return (\r\n        <>\r\n            <h4 className='msg-text'>{type || \"Qur'an\"}</h4>\r\n            <div style={{ height: 230,  textAlign: \"center\" }}>\r\n                <iframe\r\n                    src={\"https://alim.org/widgets/\"+(type?.toLowerCase() || \"insight\")}\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    // style={{ border: \"none\" }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\nimport Insights from './Insights';\r\n\r\ninterface InsightsModalProps {\r\n    shouldShow: boolean;\r\n    setShowInsightsModal: Function;\r\n}\r\n\r\nexport default function InsightsModal({ shouldShow, setShowInsightsModal }: InsightsModalProps) {\r\n\r\n    useEffect(()=>{\r\n        let x:any=document.getElementById(\"azan\")\r\n        if(x) {\r\n            x.play()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Insights of the Day\r\n                    <button type=\"button\" className=\"\" onClick={() => setShowInsightsModal(false)} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <Insights />\r\n                        <Insights type=\"Hadith\" />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\nimport InsightsModal from '../home/components/InsightsModal';\r\nimport { useToaster } from '../../_common/hooks/common/appToasterHook';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n    const toast = useToaster()\r\n\r\n    const [showInsightsModal, setShowInsightsModal] = useState<boolean>(false)\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    const checkLocation = (type: any) => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(type==\"mosque\" ? gotoGMap : gotoQiblaDir,()=>toast.error(\"Please turn on the location\"));\r\n        } else {     \r\n        }\r\n    }\r\n\r\n    const gotoGMap = (position: any) => {\r\n        // console.log({position})\r\n        window.open(\"https://www.google.com/maps/search/mosque+nearby/@\"+position.coords.latitude + \r\n        \",\" + position.coords.longitude,\"_blank\")\r\n    }\r\n\r\n    const gotoQiblaDir = (position: any) => {\r\n        console.log({position})\r\n        window.open(\"https://myislam.org/qibla-ar\",\"_blank\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        // let date = localStorage.getItem(\"ramadanDate\")\r\n        // let d = moment(new Date()).format(\"DD-MM\")\r\n        // if(date) {\r\n        //     if(d!=date) {\r\n        //         setShowRamadanModal(true)\r\n        //         localStorage.setItem(\"ramadanDate\", d)\r\n        //     }\r\n        // } else {\r\n        //     setShowRamadanModal(true)\r\n        //     localStorage.setItem(\"ramadanDate\", d)\r\n        // }\r\n        // // setShowRamadanModal(true)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // if(showRamadanModal) {\r\n        //     setTimeout(()=>{\r\n        //         setShowRamadanModal(false)\r\n        //     },30000)\r\n        // }\r\n    },[showRamadanModal])\r\n\r\n    useEffect(()=>{\r\n        let day = localStorage.getItem(\"day\")\r\n        let today = (new Date()).getDate()+\"\"\r\n        if(day) {\r\n            if(today!=day) {\r\n                setShowInsightsModal(true)\r\n                localStorage.setItem(\"day\",today)\r\n            }\r\n        } else {\r\n            setShowInsightsModal(true)\r\n            localStorage.setItem(\"day\",today)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-times\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.NAMES_OF_ALLAH}>99 Names Of Allah</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Hadiths</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={()=>checkLocation(\"qibla\")}>Qibla Direction</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.DUAS}>Duas</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://www.youtube.com/playlist?list=PLqIZQ02Yb0hmre39-7qk-4e3-eJ4WtM1c\" target=\"_blank\">Prophets' Life Videos</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => {toogleSideBarOnOff(false);window.open(\"/PrayerTimings/qaida.pdf\", \"_blank\")}}>\r\n                        {/* <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link> */}\r\n                        <a>Learn Arabic</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Names</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={()=>checkLocation(\"mosque\")}>Mosques Near Me</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.png\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"insight-btn-wrap\">\r\n                <button className=\"btn insight-btn\" onClick={()=>setShowInsightsModal(true)}>Insights of the Day</button>\r\n            </div>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must for opening Al Qur'an. Have you done wudu?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            {\r\n                showInsightsModal && \r\n                <InsightsModal\r\n                    shouldShow={showInsightsModal}\r\n                    setShowInsightsModal={setShowInsightsModal}\r\n                />\r\n            }\r\n\r\n            {/* { showRamadanModal &&\r\n                <RamadanModal\r\n                    shouldShow={showRamadanModal}\r\n                    setShowRamadanModal={setShowRamadanModal}\r\n                />\r\n            } */}\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { toast } from 'react-toastify'\r\n\r\nexport function useToaster() {\r\n  const show = (message: string) => {\r\n    toast(message)\r\n  }\r\n  const error = (message: string) => {\r\n    toast.error(message)\r\n  }\r\n  const success = (message: string) => {\r\n    toast.success(message)\r\n  }\r\n  const warning = (message: string) => {\r\n    toast.warning(message)\r\n  }\r\n  return { error, show, success, warning }\r\n}","\r\nimport React from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\n\r\nexport default function LearnArabic() {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            {/* <section className=\"main-container\">\r\n                <h2 className=\"page-title\">Arabic Letters</h2>\r\n                <img src={\"/PrayerTimings/images/letters.jpg\"} style={{width:\"100%\",marginTop:\"25px\"}}/>\r\n            </section> */}\r\n            {/* <embed src={'/PrayerTimings/qaida.pdf'} type=\"application/pdf\"/> */}\r\n            {/* <iframe src=\"/PrayerTimings/qaida.pdf\" style={{width: \"100vw\",height: \"100vh\"}}></iframe> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","Insights","style","height","textAlign","src","toLowerCase","width","InsightsModal","setShowInsightsModal","useEffect","x","document","getElementById","play","background","border","color","useState","showConfirmModal","setShowConfirmModal","showRamadanModal","navigate","useNavigate","toast","error","success","warning","showInsightsModal","toogleSideBarOnOff","status","sidebarCollapseElement","sidebarElement","overlayElement","classList","add","remove","checkLocation","navigator","geolocation","getCurrentPosition","gotoGMap","gotoQiblaDir","position","window","open","coords","latitude","longitude","console","log","localStorage","getItem","setItem","JSON","stringify","label","value","day","today","Date","getDate","id","overflow","fontWeight","to","URLS","href","target","alt","LearnArabic"],"sourceRoot":""}