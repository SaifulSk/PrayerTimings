{"version":3,"file":"static/js/Duas.246b528f.chunk.js","mappings":"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","sources":["_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","_common/hooks/islamic/appIslamicApiHook.tsx","_common/hooks/common/appApiCallHook.tsx","pages/duas/duas.tsx"],"sourcesContent":["// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#0a9246' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#000',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import { SAGA_ACTIONS } from '../../../config';\nimport { useApiCall } from '../common/appApiCallHook'\n\nexport function useIslamicApi() {\n\n    const callApi = useApiCall()\n    \n    return {\n    }\n}","import { useDispatch } from 'react-redux'\r\nimport { extractErrorMessage } from '../../../config/functions'\r\n// import { useAppLoader } from './appLoaderHook'\r\n\r\nexport function useApiCall() {\r\n\r\n  const dispatch = useDispatch()\r\n  // const { showLoader, hideLoader } = useAppLoader()\r\n\r\n  const callApi = (sagaAction: string, dataOrParams: any = {}, callbackSuccess: Function, callbackError: Function, isLoader: boolean = true) => {\r\n    // if (isLoader) showLoader()\r\n    dispatch({\r\n      type: sagaAction,\r\n      payload: dataOrParams,\r\n      callbackSuccess: (data: any) => {\r\n        let message = data && data.message ? data.message : 'Request processed successfully'\r\n        let resp = data && data.data ? data.data : null\r\n        // if (isLoader) hideLoader()\r\n        callbackSuccess && callbackSuccess(message, resp)\r\n      },\r\n      callbackError: (error: any) => {\r\n        let message = extractErrorMessage(error && error.data && error.data.errors ? error : (error.message ? error.message : null), 'Unable to process request, please try again')\r\n        let resp = error && error.data ? error.data : null\r\n        // if (isLoader) hideLoader()\r\n        // callbackError && callbackError({\r\n        //   message: message,\r\n        //   resp: resp\r\n        // })\r\n        callbackError && callbackError(message, resp)\r\n      }\r\n    })\r\n  }\r\n  return callApi\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\nimport parse from 'html-react-parser'\r\nimport { useIslamicApi } from '../../_common/hooks/islamic/appIslamicApiHook'\r\nimport duas from '../../config/data/duas.json'\r\nimport axios from 'axios';\r\nimport jsesc from 'jsesc'\r\nimport SelectInput from '../../_common/components/form-elements/selectinput/selectInput'\r\n\r\nexport default function Duas() {    \r\n\r\n    const islamicApi = useIslamicApi()\r\n    const [type, setType] = useState<any>()\r\n    const [data, setData] = useState<any>()\r\n\r\n    const changeType = (e:any) => {\r\n        // console.log({e})\r\n        setType(e)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log({duas})\r\n        // let params = {\r\n        //     slug: \"quranic\"\r\n        // }\r\n        // islamicApi.callGetDuas(params,\r\n        //     (message:any,resp:any)=>{\r\n        //         console.log({resp})\r\n        //     },\r\n        //     (message:any,resp:any)=>{\r\n\r\n        //     },\r\n        // )\r\n        // console.log(jsesc('الرَّحْمَنُ'))\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        console.log({type})\r\n        if(type?.value) {\r\n            if(type?.value=='masnoon') {\r\n                setData(duas['masnoon'])\r\n            } else if(type?.value=='ramadan') {\r\n                setData(duas['ramadan'])\r\n            }else if(type?.value=='rabbana') {\r\n                setData(duas['rabbana'])\r\n                console.log(duas['rabbana'])\r\n            }\r\n        } else {\r\n            setData(null)\r\n        }\r\n    },[type])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <h2 className=\"page-title\">Duas</h2>\r\n                    <div className=\"mb-3\">\r\n                        <SelectInput\r\n                            onChange={changeType}\r\n                            options={[\"masnoon\",\"ramadan\",\"rabbana\"].map((x:any)=>{return {label:x.charAt(0).toUpperCase()+x.substring(1),value:x}})}\r\n                            value={type}\r\n                            placeholder=\"Select Dua Type\"\r\n                        />\r\n                    </div>\r\n                {/* {duas.map((d:any)=>\r\n                    <>\r\n                        <h4>{d.transliteration}</h4>\r\n                        <div className=\"zikr-wrap\">\r\n                            <div className=\"zikr-img\">\r\n                                {parse(n.name)}\r\n                            </div>\r\n                            <div className=\"zikr-meaning\">{n.en.meaning}</div>\r\n                        </div>\r\n                    </>\r\n                )} */}\r\n                {\r\n                    data ? Object.keys(data).map((item:any)=>\r\n                        <>\r\n                            <h3 className=\"page-title\">{item}</h3>\r\n                            <div className=\"zikr-wrap\">\r\n                                <div className=\"zikr-img\">\r\n                                    {data[item].arabic}\r\n                                </div>\r\n                                <div className=\"zikr-meaning text-white\">{data[item].transliteration}</div>\r\n                                <div className=\"zikr-meaning\">{data[item].translation}</div>\r\n                                <div className=\"zikr-meaning text-white\">Reference: {data[item].reference}</div>\r\n                            </div>\r\n                            {data[item][\"recommended-use\"] && <div className=\"desc-text\">Recommended Use:{data[item][\"recommended-use\"]}</div>}\r\n                        </>\r\n                    ) : <div className=\"desc-text\">No dua selected</div>\r\n                }\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["option","provided","state","backgroundColor","isSelected","color","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","placeholder","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","label","otherKey","value","filter","opt","toLowerCase","startsWith","length","onChange","onBlur","name","inputRef","error","id","className","isClearable","isSearchable","isDisabled","dark","undefined","styles","stylesDark","ref","components","IndicatorSeparator","filterOption","InputValue","message","Form","type","useIslamicApi","dispatch","useDispatch","useApiCall","Duas","useState","setType","data","setData","useEffect","console","log","duas","Sidebar","e","map","x","charAt","toUpperCase","substring","Object","keys","item","arabic","transliteration","translation","reference"],"sourceRoot":""}