{"version":3,"file":"static/js/Home.7f5aacda.chunk.js","mappings":"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","sources":["pages/common/ConfirmModal.tsx","pages/common/Sidebar.tsx","_common/components/form-elements/datepicker/dateInput.tsx","_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","pages/home/components/StartEndTimeModal.tsx","config/functions.ts","pages/home/components/SetLocationModal.tsx","pages/home/components/NamajTimingForm.tsx","pages/home/components/UpcomingPrayerTime.tsx","pages/home/home.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"rider-name-content\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n    },[])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Baby Names</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport '../form-elem.css'\r\nimport classnames from 'classnames'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface DateInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value: Date | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  error?: any;\r\n  id?: string;\r\n  maxDate?: Date;\r\n  minDate?: Date;\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n}\r\n\r\nfunction DateInput({\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  dateFormat,\r\n  maxDate,\r\n  minDate,\r\n  disabled,\r\n  dark,\r\n}: DateInputProps) {\r\n\r\n  const datePickerContainerClass = classnames({\r\n    'ne-datepicker-container': true,\r\n    'dark': dark,\r\n  })\r\n\r\n  return (\r\n    <div className={datePickerContainerClass}>\r\n      <DatePicker\r\n        selected={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        // onFocus={onFocus ? onFocus : () => { }}\r\n        onFocus={e => e.target.blur()}\r\n        placeholderText={placeholder}\r\n        name={name}\r\n        id={id}\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        maxDate={maxDate}\r\n        minDate={minDate}\r\n        // showYearDropdown\r\n        dateFormat={dateFormat}\r\n        className=\"form-control\"\r\n        autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n      />\r\n      <i className=\"date-icon\"></i>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#0a9246' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#000',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport parse from 'html-react-parser'\r\nimport data from '../../../config/data.json'\r\nimport moment from 'moment';\r\n\r\ninterface StartEndTimeModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    formValues: any;\r\n}\r\n\r\n\r\nexport default function StartEndTimeModal({ onSuccess, onClose, shouldShow, formValues }: StartEndTimeModalProps) {\r\n\r\n    const [message, setMessage] = useState<string>(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(formValues) {\r\n            const day = moment(formValues.date).format(\"D\")\r\n            const month = moment(formValues.date).format(\"MMMM\")\r\n            const waqt = formValues.waqt.value\r\n            let x:any = data\r\n            let msg = \"<p>\"\r\n            // if(x[month][day][waqt][\"Start\"]) {\r\n                msg = msg + \"Start: <span>\" + moment(x[month][day][waqt][\"Start\"], \"HH:mm\").format(\"h:mm a\") + \"</span><br/>End: <span>\" + (x[month][day][waqt][\"End\"] ? moment(x[month][day][waqt][\"End\"], \"HH:mm\").format(\"h:mm a\") : \"Until Next Waqt\") + \"</span>\"\r\n            // }\r\n            // if(x[month][day][waqt][\"End\"]) {\r\n                // msg = msg + \"End: <span>\" + x[month][day][waqt][\"End\"] + \"</span>\"\r\n            // }\r\n            msg = msg + \"</p>\"\r\n            setMessage(msg)\r\n        }\r\n    },[formValues])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {moment(formValues.date).format(\"D MMMM \")+formValues?.waqt?.value+\" Timings\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        {parse(message)}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                    {/* {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Leave\r\n                        </button>\r\n                    </div>} */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import moment from 'moment';\r\nimport data from './data.json'\r\n\r\nexport default function getCurrentWaqt() {\r\n    const day = moment(new Date()).format(\"D\")\r\n    const month = moment(new Date()).format(\"MMMM\")\r\n    const time = moment(new Date()).format(\"HH:mm\")\r\n    let x:any = data\r\n    let y:any = \"Tahajjud\"\r\n    Object.keys(x[month][day]).map((w:any,i:any)=>{\r\n        console.log(time)\r\n        if(time>=x[month][day][w][\"Start\"]) {\r\n            y=w\r\n        }\r\n    })\r\n    return y\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { LOCATIONS } from '../../../config';\r\n\r\ninterface SetLocationModalProps {\r\n    onClose: () => void;\r\n    shouldShow: boolean;\r\n}\r\n\r\ninterface SetLocationModalValues {\r\n    location: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    location: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function SetLocationModal({ onClose, shouldShow }: SetLocationModalProps) {\r\n    \r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<SetLocationModalValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            location: undefined,\r\n        },\r\n    })\r\n\r\n    const onSubmit = (values: any) => {\r\n        localStorage.setItem(\"location\",JSON.stringify(values.location))\r\n        onClose()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(loc) {\r\n            setValue(\"location\", JSON.parse(loc))\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Set Location\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"location\"\r\n                        render={({\r\n                            field: { onChange, onBlur, value, name, ref },\r\n                            fieldState: { invalid, isTouched, isDirty, error },\r\n                            formState,\r\n                        }) => (\r\n                            <SelectInput\r\n                                name={name}\r\n                                onChange={onChange}\r\n                                onBlur={onBlur}\r\n                                inputRef={ref}\r\n                                options={LOCATIONS}\r\n                                value={value}\r\n                                placeholder=\"Select location\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={handleSubmit(onSubmit)}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport FormTextInput from '../../../_common/components/form-elements/textinput/formTextInput';\r\nimport DateInput from '../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../config';\r\nimport StartEndTimeModal from './StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../config/functions';\r\nimport SetLocationModal from './SetLocationModal';\r\n\r\ninterface NamajTimingFormValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function NamajTimingForm() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<NamajTimingFormValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let y = getCurrentWaqt()\r\n        setValue(\"waqt\",{value:y,label:y})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">\r\n                Prayer Timings\r\n                <a style={{right: \"15px\",position: \"absolute\"}} onClick={()=>{setShowSetLocationModal(true)}}>\r\n                    <i className=\"fa-solid fa-location-dot\" />\r\n                </a>\r\n            </h2>            \r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Date</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    dateFormat={\"dd-MMMM-yyyy\"}\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Date\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n                {   showSetLocationModal &&\r\n                    <SetLocationModal\r\n                        shouldShow={showSetLocationModal}\r\n                        onClose={onCloseSetLocationModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport data from '../../../config/data.json'\r\nimport moment from 'moment';\r\nimport getCurrentWaqt from '../../../config/functions';\r\n\r\nexport default function UpcomingPrayerTime() {\r\n\r\n    const day = moment(new Date()).format(\"D\")\r\n    const month = moment(new Date()).format(\"MMMM\")\r\n    const [upcomingTime, setUpcomingTime] = useState<any>()\r\n    const [waqt, setWaqt] = useState<any>()\r\n    \r\n    useEffect(()=>{\r\n        let x:any = data\r\n        let y = getCurrentWaqt()\r\n        let waqts = Object.keys(x[month][day])\r\n        let i = waqts.indexOf(y)\r\n        if(i==(waqts.length-1)) {\r\n            y=waqts[0]\r\n        } else {\r\n            y=waqts[i+1]\r\n        }\r\n        setWaqt(y)\r\n        setUpcomingTime(moment(x[month][day][y][\"Start\"], \"HH:mm\").format(\"h:mm a\"))\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"page-title\">Upcoming Prayer</h3>\r\n            <div className=\"content text-white\">\r\n                Waqt: <span>{waqt}</span>\r\n            </div>\r\n            <div className=\"content text-white\">\r\n                Time: <span>{upcomingTime}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport NamajTimingForm from './components/NamajTimingForm';\r\nimport Sidebar from '../common/Sidebar';\r\nimport UpcomingPrayerTime from './components/UpcomingPrayerTime';\r\n\r\nexport default function Home() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <NamajTimingForm />\r\n                <UpcomingPrayerTime />\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","useState","showConfirmModal","setShowConfirmModal","navigate","useNavigate","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","useEffect","localStorage","setItem","JSON","stringify","label","value","id","style","overflow","fontWeight","color","to","URLS","href","target","src","alt","window","open","onChange","onBlur","onFocus","name","inputRef","placeholder","error","dateFormat","maxDate","minDate","disabled","dark","datePickerContainerClass","classnames","selected","e","blur","placeholderText","ref","autoComplete","uuidv4","Form","option","provided","state","backgroundColor","isSelected","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","otherKey","filter","opt","toLowerCase","startsWith","length","isClearable","isSearchable","isDisabled","undefined","styles","stylesDark","components","IndicatorSeparator","filterOption","InputValue","StartEndTimeModal","formValues","setMessage","day","moment","date","format","month","waqt","x","data","msg","parse","getCurrentWaqt","Date","time","y","Object","keys","map","w","i","console","log","NamajTimingSchema","yup","shape","location","nullable","SetLocationModal","useForm","resolver","yupResolver","defaultValues","setValue","formState","errors","handleSubmit","loc","getItem","render","field","fieldState","invalid","isTouched","isDirty","LOCATIONS","values","NamajTimingForm","showStartEndTimeModal","setShowStartEndTimeModal","showSetLocationModal","setShowSetLocationModal","setFormValues","right","position","onSubmit","noValidate","WAQT_OPTIONS","UpcomingPrayerTime","upcomingTime","setUpcomingTime","setWaqt","waqts","indexOf","Home","Sidebar"],"sourceRoot":""}