{"version":3,"file":"static/js/Home.38a9d462.chunk.js","mappings":"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","sources":["_common/components/form-elements/datepicker/dateInput.tsx","_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","pages/home/components/StartEndTimeModal.tsx","pages/home/components/NamajTimingForm.tsx","pages/home/components/ConfirmModal.tsx","pages/common/Sidebar.tsx","pages/home/components/LearnArabic.tsx","pages/home/home.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport '../form-elem.css'\r\nimport classnames from 'classnames'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface DateInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value: Date | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  error?: any;\r\n  id?: string;\r\n  maxDate?: Date;\r\n  minDate?: Date;\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n}\r\n\r\nfunction DateInput({\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  dateFormat,\r\n  maxDate,\r\n  minDate,\r\n  disabled,\r\n  dark,\r\n}: DateInputProps) {\r\n\r\n  const datePickerContainerClass = classnames({\r\n    'ne-datepicker-container': true,\r\n    'dark': dark,\r\n  })\r\n\r\n  return (\r\n    <div className={datePickerContainerClass}>\r\n      <DatePicker\r\n        selected={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        // onFocus={onFocus ? onFocus : () => { }}\r\n        onFocus={e => e.target.blur()}\r\n        placeholderText={placeholder}\r\n        name={name}\r\n        id={id}\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        maxDate={maxDate}\r\n        minDate={minDate}\r\n        // showYearDropdown\r\n        dateFormat={dateFormat}\r\n        className=\"form-control\"\r\n        autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n      />\r\n      <i className=\"date-icon\"></i>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#000' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#626262',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport parse from 'html-react-parser'\r\nimport data from '../../../config/data.json'\r\nimport moment from 'moment';\r\n\r\ninterface StartEndTimeModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    formValues: any;\r\n}\r\n\r\n\r\nexport default function StartEndTimeModal({ onSuccess, onClose, shouldShow, formValues }: StartEndTimeModalProps) {\r\n\r\n    const [message, setMessage] = useState<string>(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(formValues) {\r\n            const day = moment(formValues.date).format(\"D\")\r\n            const month = moment(formValues.date).format(\"MMMM\")\r\n            const waqt = formValues.waqt.value\r\n            let x:any = data\r\n            let msg = \"<p>\"\r\n            // if(x[month][day][waqt][\"Start\"]) {\r\n                msg = msg + \"Start: <span style='font-weight: bold'>\" + x[month][day][waqt][\"Start\"] + \"</span><br/>End: <span style='font-weight: bold'>\" + (x[month][day][waqt][\"End\"] || \"Until Next Waqt\") + \"</span>\"\r\n            // }\r\n            // if(x[month][day][waqt][\"End\"]) {\r\n                // msg = msg + \"End: <span style='font-weight: bold'>\" + x[month][day][waqt][\"End\"] + \"</span>\"\r\n            // }\r\n            msg = msg + \"</p>\"\r\n            setMessage(msg)\r\n        }\r\n    },[formValues])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {moment(formValues.date).format(\"D MMMM \")+formValues?.waqt?.value+\" Timings\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        {parse(message)}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                    {/* {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Leave\r\n                        </button>\r\n                    </div>} */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport FormTextInput from '../../../_common/components/form-elements/textinput/formTextInput';\r\nimport DateInput from '../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../config';\r\nimport StartEndTimeModal from './StartEndTimeModal';\r\n\r\ninterface UserDetailsFormValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst userDetailsSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function NamajTimingForm() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<UserDetailsFormValues>({\r\n        resolver: yupResolver(userDetailsSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(\"6:51\"<\"6:52\")\r\n        // let x = \r\n        // setValue(\"waqt\",{value: x,label: x})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">Prayer Timings</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Date</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    dateFormat={\"dd-MMMM-yyyy\"}\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Date\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"rider-name-content\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from '../home/components/ConfirmModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n    }\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{color:\"#000\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    <span style={{color:\"#0a9246\",fontWeight: \"bold\"}}>Islamic </span>Know How\r\n                </div>\r\n                {/* {\r\n                    userDetails &&\r\n                    <div className=\"head-user\">\r\n                        Welcome, {userDetails && userDetails.full_name && userDetails.full_name !== \" \" ? userDetails.full_name : ' User'}\r\n                    </div>\r\n                } */}\r\n                <ul className=\"list-unstyled components\">\r\n                    {/* <li>\r\n                        <Link to={URLS.HOME}>Rodeo Events</Link>\r\n                    </li>\r\n                    {userDetails ? (\r\n                        <li>\r\n                        <Link to={URLS.USER.PROFILE}>My Profile</Link>\r\n                        </li>\r\n                    ): <li>\r\n                        <Link to={URLS.LOGIN}>Login</Link>\r\n                    </li>\r\n                    }\r\n                    {\r\n                        cmsList && cmsList.length ? \r\n                        cmsList.map((cms: any) =>\r\n                            <li key={cms.id}>\r\n                                <a onClick={()=>gotoCmsPage(cms.id)}>\r\n                                    {cms.title}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                        : null\r\n                    } */}\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={\"/PrayerTimings/prayer-timing\"}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Baby Names</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={\"/PrayerTimings/learn-arabic\"}>Learn Arabic</Link>\r\n                    </li>\r\n                    {/* {\r\n                        userDetails ?\r\n                        <li>\r\n                            <Link to=\"#\" onClick={(e) => logOut(e)}>Logout</Link>\r\n                        </li> : null\r\n                    } */}\r\n\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                    <span className=\"open-nav\"\r\n                        onClick={() => toogleSideBarOnOff(true)}\r\n                    >\r\n                    <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                    </span>\r\n                </button>\r\n                {/* {\r\n                    [RODEO_PAGE_NAME.EVENT_GAME_LIST, RODEO_PAGE_NAME.EVENT_GAME_DETAILS].includes(page) && (\r\n                    // statusMessageSelector && statusMessageSelector.status_text &&\r\n                    statusMessageSelector && statusMessageSelector.length &&\r\n                    <div className=\"status-bar-wrap\">\r\n                        <Marquee direction=\"left\" loop={0} pauseOnHover={true} speed={60}>\r\n                        {statusMessageSelector}\r\n                        </Marquee>\r\n                    </div>\r\n                    )} */}\r\n\r\n                {\r\n                    // userDetails &&\r\n                    <button\r\n                    className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarCollapse\"\r\n                    aria-controls=\"navbarCollapse\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                    // onClick={toogleProfileMenuBarOnOff}\r\n                    // onClick={goToHome}\r\n                    >\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                }\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n            {/* IOS Scrren Add to home scrren option popup */}\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Sidebar from '../../common/Sidebar'\r\n\r\nexport default function LearnArabic() {\r\n    return (\r\n        <React.Fragment>\r\n            <h2 className=\"page-title\">Learn Arabic</h2>\r\n            <img src={\"/PrayerTimings/images/letters.jpg\"} style={{width:\"100%\",marginTop:\"25px\"}}/>              \r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment';\r\nimport NamajTimingForm from './components/NamajTimingForm';\r\nimport Sidebar from '../common/Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport LearnArabic from './components/LearnArabic';\r\n\r\nexport default function Home() {\r\n\r\n    const day = moment(new Date()).format(\"DD\")\r\n    const month = moment(new Date()).format(\"MMMM\")\r\n    const [time, setTime] = useState<any>()\r\n    const urlParams = useParams<any>()\r\n    \r\n    useEffect(()=>{\r\n        console.log({urlParams})\r\n    },[urlParams])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                {/* <h1>Home</h1>\r\n                <h2>Page</h2>\r\n                <h3>{time}</h3> */}\r\n                { urlParams?.page==\"learn-arabic\" ? <LearnArabic />  : <NamajTimingForm /> }\r\n            </section>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n"],"names":["onChange","onBlur","value","onFocus","name","inputRef","placeholder","error","id","dateFormat","maxDate","minDate","disabled","dark","datePickerContainerClass","classnames","className","selected","e","target","blur","placeholderText","ref","autoComplete","uuidv4","message","Form","type","option","provided","state","backgroundColor","isSelected","color","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","label","otherKey","filter","opt","toLowerCase","startsWith","length","isClearable","isSearchable","isDisabled","undefined","styles","stylesDark","components","IndicatorSeparator","filterOption","InputValue","StartEndTimeModal","onSuccess","onClose","shouldShow","formValues","useState","setMessage","useEffect","day","moment","date","format","month","waqt","x","data","msg","Modal","show","backdrop","keyboard","centered","contentClassName","parse","onClick","userDetailsSchema","yup","shape","nullable","NamajTimingForm","useForm","resolver","yupResolver","defaultValues","Date","handleSubmit","formState","errors","setValue","showStartEndTimeModal","setShowStartEndTimeModal","setFormValues","console","log","onSubmit","values","noValidate","render","field","fieldState","invalid","isTouched","isDirty","WAQT_OPTIONS","ConfirmModal","showConfirmModal","setShowConfirmModal","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","style","overflow","fontWeight","to","href","src","alt","window","open","LearnArabic","width","marginTop","Home","urlParams","useParams","page"],"sourceRoot":""}