{"version":3,"file":"static/js/TasbihCounter.3478b85a.chunk.js","mappings":"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","sources":["pages/common/ConfirmModal.tsx","pages/home/components/RamadanModal.tsx","pages/common/Sidebar.tsx","pages/tasbihCounter/components/Counter.tsx","pages/tasbihCounter/components/Zikr.tsx","pages/tasbihCounter/tasbihCounter.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"rider-name-content\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface RamadanModalProps {\r\n    shouldShow: boolean;\r\n}\r\n\r\nexport default function RamadanModal({ shouldShow }: RamadanModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Ramadan Kareem\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <img src=\"/PrayerTimings/images/ramadan.webp\" style={{width:\"100%\"}} />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        let date = localStorage.getItem(\"ramadanDate\")\r\n        if(date) {\r\n            let d = moment(new Date()).format(\"DD-MM\")\r\n            if(d!=date) {\r\n                setShowRamadanModal(true)\r\n                localStorage.setItem(\"ramadanDate\", moment(new Date()).format(\"DD-MM\"))\r\n            }\r\n        } else {\r\n            setShowRamadanModal(true)\r\n            localStorage.setItem(\"ramadanDate\", moment(new Date()).format(\"DD-MM\"))\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(showRamadanModal) {\r\n            setTimeout(()=>{\r\n                setShowRamadanModal(false)\r\n            },5000)\r\n        }\r\n    },[showRamadanModal])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Go to Sunnah.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Baby Names</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n\r\n            { showRamadanModal && <RamadanModal shouldShow={showRamadanModal} /> }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Counter() {\r\n\r\n    const [value, setValue] = useState<number>(0)\r\n    \r\n    useEffect(()=>{\r\n        \r\n        let c=Number(localStorage.getItem(\"tasbihCount\"))\r\n\r\n        if(c>0) {\r\n            setValue(c)\r\n        }\r\n\r\n        return () => {\r\n            // console.log(\"Out\",value)\r\n        }\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"tasbihCount\",String(value))\r\n    },[value])\r\n    \r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">Tasbih Counter</h2>\r\n            <span className=\"count-val\">{value}</span>\r\n            <div className=\"plus-btn-wrap\">\r\n                <a onClick={()=>setValue(value+1)}><i className=\"fa fa-plus\"/></a>\r\n            </div>\r\n            {(value>0) &&\r\n                <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                    <a onClick={()=>setValue(0)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { ZIKRS } from '../../../config'\r\n\r\nexport default function Zikr() {\r\n\r\n    const totalZikrs = Array.from({length: 12}, (_, i) => i + 1)\r\n\r\n    const [zikrCounts, setZikrCounts] = useState<any>(Array.from({length: 12}, (_, i) => 0))\r\n\r\n    const changeCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = x[item-1] + 1\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    const resetCount = (item: any) => {\r\n        let x: any = {...zikrCounts}\r\n        x[item-1] = 0\r\n        setZikrCounts(x)\r\n        localStorage.setItem(\"zikr\",JSON.stringify(x))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let val = localStorage.getItem(\"zikr\")\r\n        if(val) {\r\n            setZikrCounts(JSON.parse(val))\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"page-title\">Zikr Counters</h3>\r\n            {totalZikrs.map((x:any)=>\r\n                <>\r\n                    <h4>{x}. {Object.keys(ZIKRS)[x-1]}</h4>\r\n                    <div className=\"zikr-wrap\">\r\n                        <div className=\"zikr-img\">\r\n                            <img src={\"images/Zikr/\"+x+\".png\"} />\r\n                        </div>\r\n                        <div className=\"zikr-meaning\">{Object.values(ZIKRS)[x-1]}</div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <span className=\"count-val\">{zikrCounts[x-1]}</span>\r\n                            </div>\r\n                            <div className={\"col-\"+(zikrCounts[x-1]>0 ? \"3\" : \"6\")}>\r\n                                <div className=\"plus-btn-wrap\">\r\n                                    <a onClick={()=>changeCount(x)}><i className=\"fa fa-plus\"/></a>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                zikrCounts[x-1]>0 ?\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"plus-btn-wrap reset-btn-wrap\">\r\n                                            <a onClick={()=>resetCount(x)}><img src=\"/PrayerTimings/images/reset.png\"/></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\nimport Counter from './components/Counter'\r\nimport Zikr from './components/Zikr'\r\n\r\nexport default function TasbihCounter() {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <Counter />       \r\n                <Zikr />\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","RamadanModal","src","style","width","useState","showConfirmModal","setShowConfirmModal","showRamadanModal","setShowRamadanModal","navigate","useNavigate","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","useEffect","localStorage","getItem","setItem","JSON","stringify","label","value","date","moment","Date","format","setTimeout","id","overflow","fontWeight","color","href","target","to","URLS","alt","window","open","Counter","setValue","c","Number","String","Zikr","totalZikrs","Array","from","length","_","i","zikrCounts","setZikrCounts","val","parse","map","x","Object","keys","ZIKRS","values","item","changeCount","resetCount","TasbihCounter","Sidebar"],"sourceRoot":""}