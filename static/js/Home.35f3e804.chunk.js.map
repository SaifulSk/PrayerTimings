{"version":3,"file":"static/js/Home.35f3e804.chunk.js","mappings":"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","sources":["_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","_common/components/form-elements/datepicker/dateInput.tsx","pages/home/components/StartEndTimeModal.tsx","pages/home/components/SetLocationModal.tsx","pages/home/components/NamajTimingForm.tsx","pages/home/components/AzanModal.tsx","pages/home/components/UpcomingPrayerTime.tsx","pages/home/home.tsx"],"sourcesContent":["// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#0a9246' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#000',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport '../form-elem.css'\r\nimport classnames from 'classnames'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface DateInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value: Date | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  error?: any;\r\n  id?: string;\r\n  maxDate?: Date;\r\n  minDate?: Date;\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n}\r\n\r\nfunction DateInput({\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  dateFormat,\r\n  maxDate,\r\n  minDate,\r\n  disabled,\r\n  dark,\r\n}: DateInputProps) {\r\n\r\n  const datePickerContainerClass = classnames({\r\n    'ne-datepicker-container': true,\r\n    'dark': dark,\r\n  })\r\n\r\n  return (\r\n    <div className={datePickerContainerClass}>\r\n      <DatePicker\r\n        selected={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        // onFocus={onFocus ? onFocus : () => { }}\r\n        onFocus={e => e.target.blur()}\r\n        placeholderText={placeholder}\r\n        name={name}\r\n        id={id}\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        maxDate={maxDate}\r\n        minDate={minDate}\r\n        // showYearDropdown\r\n        dateFormat={dateFormat}\r\n        className=\"form-control\"\r\n        autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n      />\r\n      <i className=\"date-icon\"></i>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport parse from 'html-react-parser'\r\nimport data from '../../../config/data/data.json'\r\nimport moment from 'moment';\r\n\r\ninterface StartEndTimeModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    formValues: any;\r\n}\r\n\r\n\r\nexport default function StartEndTimeModal({ onSuccess, onClose, shouldShow, formValues }: StartEndTimeModalProps) {\r\n\r\n    const [message, setMessage] = useState<string>(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(formValues) {\r\n            const day = moment(formValues.date).format(\"D\")\r\n            const month = moment(formValues.date).format(\"MMMM\")\r\n            const waqt = formValues.waqt.value\r\n            let x:any = data\r\n            let msg = \"<p>\"\r\n            // if(x[month][day][waqt][\"Start\"]) {\r\n                msg = msg + \"Start: <span>\" + moment(x[month][day][waqt][\"Start\"], \"HH:mm\").format(\"h:mm a\") + \"</span><br/>End: <span>\" + (x[month][day][waqt][\"End\"] ? moment(x[month][day][waqt][\"End\"], \"HH:mm\").format(\"h:mm a\") : \"Until Next Waqt\") + \"</span>\"\r\n            // }\r\n            // if(x[month][day][waqt][\"End\"]) {\r\n                // msg = msg + \"End: <span>\" + x[month][day][waqt][\"End\"] + \"</span>\"\r\n            // }\r\n            msg = msg + \"</p>\"\r\n            setMessage(msg)\r\n        }\r\n    },[formValues])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {moment(formValues.date).format(\"D MMMM \")+formValues?.waqt?.value+\" Timings\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        {parse(message)}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                    {/* {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Leave\r\n                        </button>\r\n                    </div>} */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { LOCATIONS } from '../../../config';\r\n\r\ninterface SetLocationModalProps {\r\n    onClose: () => void;\r\n    shouldShow: boolean;\r\n}\r\n\r\ninterface SetLocationModalValues {\r\n    location: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    location: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function SetLocationModal({ onClose, shouldShow }: SetLocationModalProps) {\r\n    \r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<SetLocationModalValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            location: undefined,\r\n        },\r\n    })\r\n\r\n    const onSubmit = (values: any) => {\r\n        localStorage.setItem(\"location\",JSON.stringify(values.location))\r\n        onClose()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(loc) {\r\n            setValue(\"location\", JSON.parse(loc))\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Set Location\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"location\"\r\n                        render={({\r\n                            field: { onChange, onBlur, value, name, ref },\r\n                            fieldState: { invalid, isTouched, isDirty, error },\r\n                            formState,\r\n                        }) => (\r\n                            <SelectInput\r\n                                name={name}\r\n                                onChange={onChange}\r\n                                onBlur={onBlur}\r\n                                inputRef={ref}\r\n                                options={LOCATIONS}\r\n                                value={value}\r\n                                placeholder=\"Select location\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={handleSubmit(onSubmit)}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport FormTextInput from '../../../_common/components/form-elements/textinput/formTextInput';\r\nimport DateInput from '../../../_common/components/form-elements/datepicker/dateInput';\r\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\r\nimport { WAQT_OPTIONS } from '../../../config';\r\nimport StartEndTimeModal from './StartEndTimeModal';\r\nimport getCurrentWaqt from '../../../config/functions';\r\nimport SetLocationModal from './SetLocationModal';\r\n\r\ninterface NamajTimingFormValues {\r\n    date: any;\r\n    waqt: any;\r\n}\r\n\r\nconst NamajTimingSchema = yup.object().shape({\r\n    date: yup\r\n        .string(),\r\n    waqt: yup\r\n        .object()\r\n        .nullable(),\r\n})\r\n\r\nexport default function NamajTimingForm() {\r\n\r\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<NamajTimingFormValues>({\r\n        resolver: yupResolver(NamajTimingSchema),\r\n        defaultValues: {\r\n            date: new Date(),\r\n            waqt: '',\r\n        },\r\n    })\r\n\r\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\r\n    const [showSetLocationModal, setShowSetLocationModal] = useState<boolean>(false)\r\n    const [formValues, setFormValues] = useState<any>()\r\n\r\n    const onSubmit = (values: any) => {\r\n        console.log({values})\r\n        setShowStartEndTimeModal(true)\r\n        setFormValues(values)\r\n    }\r\n\r\n    const onCloseStartEndTimeModal = () => {\r\n        setShowStartEndTimeModal(false)\r\n    }\r\n\r\n    const onCloseSetLocationModal = () => {\r\n        setShowSetLocationModal(false)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        let y = getCurrentWaqt()\r\n        setValue(\"waqt\",{value:y,label:y})\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"page-title\">\r\n                Prayer Timings\r\n                <a style={{right: \"15px\",position: \"absolute\"}} onClick={()=>{setShowSetLocationModal(true)}}>\r\n                    <i className=\"fa-solid fa-location-dot\" />\r\n                </a>\r\n            </h2>            \r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=\"form-box-new\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Date</label>\r\n                        {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"date\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <DateInput\r\n                                    onChange={(e) => {\r\n                                        onChange(e)\r\n                                    }}\r\n                                    onBlur={onBlur}\r\n                                    value={value}\r\n                                    // maxDate={new Date()}\r\n                                    dateFormat={\"dd-MMMM-yyyy\"}\r\n                                    inputRef={ref}\r\n                                    // error={errors.date}\r\n                                    placeholder=\"Select Date\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Namaj Waqt</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"waqt\"\r\n                            render={({\r\n                                field: { onChange, onBlur, value, name, ref },\r\n                                fieldState: { invalid, isTouched, isDirty, error },\r\n                                formState,\r\n                            }) => (\r\n                                <SelectInput\r\n                                    name={name}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    inputRef={ref}\r\n                                    options={WAQT_OPTIONS}\r\n                                    value={value}\r\n                                    // error={errors.waqt}\r\n                                    placeholder=\"Select Waqt\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                        <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\r\n                    </div>\r\n                </div>\r\n                {   showStartEndTimeModal && formValues &&\r\n                    <StartEndTimeModal\r\n                        shouldShow={showStartEndTimeModal}\r\n                        formValues={formValues}\r\n                        onClose={onCloseStartEndTimeModal}\r\n                    />\r\n                }\r\n                {   showSetLocationModal &&\r\n                    <SetLocationModal\r\n                        shouldShow={showSetLocationModal}\r\n                        onClose={onCloseSetLocationModal}\r\n                    />\r\n                }\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\ninterface AzanModalProps {\r\n    shouldShow: boolean;\r\n    closeAzanModal: Function;\r\n    waqt: string;\r\n}\r\n\r\nexport default function AzanModal({ shouldShow, closeAzanModal, waqt }: AzanModalProps) {\r\n\r\n    const vidRef = useRef(null)\r\n    const [crossActive, setCrossActive] = useState<boolean>(false)\r\n\r\n    const btnClicked = () => {\r\n        console.log(\"Clicked\")\r\n        // let x:any=document.getElementById(\"azanVid\")\r\n        var playButton = document.getElementById(\"play_button\");\r\n        let video: any = vidRef?.current\r\n        if(video && playButton) {\r\n        //     if(type==\"on\") {\r\n        //         x.muted = false\r\n        //     } else {\r\n        //         x.muted = false\r\n        //     }\r\n        // }        \r\n            // Event listener for the play/pause button\r\n            if (video.paused == true) {\r\n                // Play the video\r\n                video.play();\r\n\r\n                // Update the button text to 'Pause'\r\n                playButton.innerHTML = \"Pause\";\r\n            } else {\r\n                // Pause the video\r\n                video.pause();\r\n\r\n                // Update the button text to 'Play'\r\n                playButton.innerHTML = \"Play\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const vidClicked = () => {\r\n        let video: any = vidRef?.current\r\n        if(video) {\r\n            video.muted = false\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setCrossActive(true)\r\n        //     let x:any=document.getElementById(\"play_button\")\r\n        //     if(x) {\r\n        //         x.click()\r\n        //     }\r\n        //     // let x:any=document.getElementById(\"azanVid\")\r\n        //     // if(x) {\r\n        //     //     x.play()\r\n        //     // }\r\n        },15000)\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    {waqt} Azan\r\n                    {crossActive && <button type=\"button\" className=\"\" onClick={()=>closeAzanModal()} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <video width=\"100%\" id=\"azanVid\" preload='auto'\r\n                            autoPlay\r\n                            muted={true}\r\n                            onClick={()=>vidClicked()}\r\n                            onEnded={()=>closeAzanModal()} ref={vidRef}>\r\n                            {waqt==\"Fajr\" ?\r\n                                <source src=\"images/FajrAzan.mp4\" type=\"video/mp4\" />\r\n                                :\r\n                                <source src=\"images/Azan.mp4\" type=\"video/mp4\" />\r\n                            }\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                        <h4 className=\"msg-text\">Click the above video to listen to the Adhan</h4>\r\n                        {/* <button id=\"play_button\" onClick={()=>btnClicked()}>Play</button> */}\r\n                        {/* <i className=\"fa fa-volume-up\" onClick={()=>btnClicked(\"on\")}/> */}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport data from '../../../config/data/data.json'\r\nimport moment from 'moment';\r\nimport getCurrentWaqt from '../../../config/functions';\r\nimport AzanModal from './AzanModal';\r\n\r\nexport default function UpcomingPrayerTime({type}:any) {\r\n    const [upcomingTime, setUpcomingTime] = useState<any>()\r\n    const [waqt, setWaqt] = useState<any>()\r\n    const [remainingTime, setRemainingTime] = useState<any>()\r\n    const [intervalId, setIntervalId] = useState<any>()\r\n    const [showAzanModal, setShowAzanModal] = useState<boolean>(false)\r\n    const dataa:any = data\r\n\r\n    const pad = (num: any) => {\r\n        return (\"0\"+num).slice(-2)\r\n    }\r\n    const hhmmss = (secs: any) => {\r\n      var minutes = Math.floor(secs / 60)\r\n      secs = secs%60\r\n      var hours = Math.floor(minutes/60)\r\n      minutes = minutes%60\r\n      return `${pad(hours)}:${pad(minutes)}:${pad(secs)}`\r\n      // return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs) for old browsers\r\n    }\r\n\r\n    const openAzanModal = () => {\r\n        setShowAzanModal(true)\r\n    }\r\n\r\n    const closeAzanModal = () => {\r\n        setShowAzanModal(false)\r\n        // window.location.reload()\r\n        findUpcomingWaqt()\r\n    }\r\n    \r\n    const findUpcomingWaqt = () => {\r\n        \r\n        let currentDate = moment()\r\n\r\n        let day = currentDate.format(\"D\")\r\n        let month = currentDate.format(\"MMMM\")\r\n\r\n        let x:any = data\r\n        let y = getCurrentWaqt()\r\n        let waqts = Object.keys(x[month][day])\r\n        let i = waqts.indexOf(y)\r\n        if(i==(waqts.length-1)) {\r\n            y=waqts[0]\r\n            let t = currentDate.format(\"HH:mm\")\r\n            if(t>\"22:00\") {\r\n                day = moment().add(1,'days').format(\"D\")\r\n                month = moment().add(1,'days').format(\"MMMM\")\r\n            }\r\n        } else {\r\n            y=waqts[i+1]\r\n        }\r\n        setWaqt(y)\r\n        console.log(month,day)\r\n        let tm = moment(x[month][day][y][\"Start\"], \"HH:mm\").format(\"h:mm a\")\r\n        setUpcomingTime(tm)\r\n        countDown(tm)\r\n    }\r\n\r\n    const countDown = (tm: any) => {\r\n        let sec = (moment(tm,\"h:mm a\").diff(moment(),'seconds')+86400)%86400\r\n        // let sec = 3\r\n        console.log({sec})\r\n        let id=setInterval(()=>{\r\n            setIntervalId(id)\r\n            setRemainingTime(hhmmss(sec))\r\n            sec--\r\n            if(sec<0) {\r\n                clearInterval(id)\r\n                openAzanModal()\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        findUpcomingWaqt()\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"highlight-text content\">\r\n                Current Waqt <span>({getCurrentWaqt()})</span> ends at <span>{dataa[moment().format(\"MMMM\")][moment().format(\"D\")][\"End\"] ? dataa[moment().format(\"MMMM\")][moment().format(\"D\")][\"End\"] : moment(upcomingTime,\"h:mm a\").subtract(1,\"minutes\").format(\"h:mm a\")}</span>\r\n            </div>\r\n            <h3 className=\"page-title\">Upcoming Prayer</h3>\r\n            <div className=\"content text-white\">\r\n                Waqt: <span>{waqt}</span>\r\n            </div>\r\n            <div className=\"content text-white\">\r\n                Time: <span>{upcomingTime}</span>\r\n            </div>\r\n            <div className=\"content text-white\">\r\n                Time Left: <span>{remainingTime}</span>\r\n            </div>\r\n\r\n            {\r\n                showAzanModal && waqt && waqt!=\"Tahajjud\" &&\r\n                <AzanModal\r\n                    shouldShow={showAzanModal}\r\n                    closeAzanModal={closeAzanModal}\r\n                    waqt={waqt}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport NamajTimingForm from './components/NamajTimingForm';\r\nimport Sidebar from '../common/Sidebar';\r\nimport UpcomingPrayerTime from './components/UpcomingPrayerTime';\r\nimport Insights from './components/Insights';\r\nimport InsightsModal from './components/InsightsModal';\r\n\r\nexport default function Home() {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <NamajTimingForm />\r\n                {/* <UpcomingPrayerTime type=\"current\"/> */}\r\n                <UpcomingPrayerTime />\r\n                {/* <div className=\"btn-wrap\">\r\n                    <button className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\" onClick={()=>setShowInsightsModal(true)}>Insights of the Day</button>\r\n                </div> */}\r\n                {/* <Insights />\r\n                <Insights type=\"Hadith\" /> */}\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"],"names":["option","provided","state","backgroundColor","isSelected","color","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","placeholder","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","label","otherKey","value","filter","opt","toLowerCase","startsWith","length","onChange","onBlur","name","inputRef","error","id","className","isClearable","isSearchable","isDisabled","dark","undefined","styles","stylesDark","ref","components","IndicatorSeparator","filterOption","InputValue","message","Form","type","onFocus","dateFormat","maxDate","minDate","disabled","datePickerContainerClass","classnames","selected","e","target","blur","placeholderText","autoComplete","uuidv4","StartEndTimeModal","onSuccess","onClose","shouldShow","formValues","useState","setMessage","useEffect","day","moment","date","format","month","waqt","x","data","msg","Modal","show","backdrop","keyboard","centered","contentClassName","parse","onClick","NamajTimingSchema","yup","shape","location","nullable","SetLocationModal","useForm","resolver","yupResolver","defaultValues","setValue","formState","errors","handleSubmit","loc","localStorage","getItem","JSON","render","field","fieldState","invalid","isTouched","isDirty","LOCATIONS","values","setItem","stringify","NamajTimingForm","Date","showStartEndTimeModal","setShowStartEndTimeModal","showSetLocationModal","setShowSetLocationModal","setFormValues","y","getCurrentWaqt","style","right","position","onSubmit","console","log","noValidate","WAQT_OPTIONS","AzanModal","closeAzanModal","vidRef","useRef","crossActive","setCrossActive","setTimeout","background","border","width","preload","autoPlay","muted","video","current","vidClicked","onEnded","src","UpcomingPrayerTime","upcomingTime","setUpcomingTime","setWaqt","remainingTime","setRemainingTime","intervalId","setIntervalId","showAzanModal","setShowAzanModal","dataa","pad","num","slice","findUpcomingWaqt","currentDate","waqts","Object","keys","i","indexOf","add","tm","countDown","sec","diff","setInterval","secs","minutes","Math","floor","hours","hhmmss","clearInterval","subtract","Home","Sidebar"],"sourceRoot":""}