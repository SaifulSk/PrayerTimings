{"version":3,"file":"static/js/698.6ffc8365.chunk.js","mappings":"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","sources":["config/functions.ts","pages/common/ConfirmModal.tsx","pages/home/components/RamadanModal.tsx","pages/common/Sidebar.tsx"],"sourcesContent":["import moment from 'moment';\r\nimport data from './data/data.json'\r\n\r\nexport default function getCurrentWaqt() {\r\n    const day = moment(new Date()).format(\"D\")\r\n    const month = moment(new Date()).format(\"MMMM\")\r\n    const time = moment(new Date()).format(\"HH:mm\")\r\n    let x:any = data\r\n    let y:any = \"Tahajjud\"\r\n    Object.keys(x[month][day]).map((w:any,i:any)=>{\r\n        console.log(time)\r\n        if(time>=x[month][day][w][\"Start\"]) {\r\n            y=w\r\n        }\r\n    })\r\n    return y\r\n}\r\n\r\nexport const extractErrorMessage = (e: any, defaultMessage = 'Please try again') => {\r\n  if (e && e.data && e.data.length) {\r\n    var err = e.data;\r\n    var errArrays = Object.values(err[0].errors);\r\n    var msg = '';\r\n    errArrays.map(x => {\r\n\r\n      msg = msg + ' ' + x;\r\n    })\r\n    return msg;\r\n  } else if (typeof (e.data) == 'object') {\r\n    var keys = Object.keys(e.data);\r\n    var values = Object.values(e.data);\r\n    var msg = '';\r\n    if (values && values.length) {\r\n      values.map((x: any, i: number) => {\r\n        if (typeof x == 'string') {\r\n          msg = x;\r\n          // return x;\r\n        }\r\n        else {\r\n          let errorvalues = Object.values(x)\r\n          if (errorvalues && errorvalues.length) {\r\n            errorvalues.map((k: any, index: number) => {\r\n              msg = msg + (index + 1) + ' : ' + k + '\\n' + '\\n';\r\n            })\r\n          }\r\n        }\r\n      })\r\n      return msg;\r\n    }\r\n    return defaultMessage\r\n  }\r\n  else if (typeof (e) === 'string') {\r\n    return e\r\n  }\r\n  else {\r\n    return defaultMessage\r\n  }\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"msg-text\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\ninterface RamadanModalProps {\r\n    shouldShow: boolean;\r\n}\r\n\r\nexport default function RamadanModal({ shouldShow }: RamadanModalProps) {\r\n\r\n    const [day, setDay] = useState<any>()\r\n\r\n    useEffect(()=>{\r\n        let today = moment()\r\n        let firstDay = moment(\"24-03\",\"DD-MM\")\r\n        setDay(today.diff(firstDay,'days') + 1)\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Ramadan Day {day}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        {/* <img className=\"ramadan-day-img\" src={\"/PrayerTimings/images/ramadan.webp\"} /> */}\r\n                        <img className=\"ramadan-day-img\" src={\"http://www.quranreading.com/blog/wp-content/uploads/2014/07/\"+day+\".png\"} />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        let date = localStorage.getItem(\"ramadanDate\")\r\n        let d = moment(new Date()).format(\"DD-MM\")\r\n        if(date) {\r\n            if(d!=date) {\r\n                setShowRamadanModal(true)\r\n                localStorage.setItem(\"ramadanDate\", d)\r\n            }\r\n        } else {\r\n            setShowRamadanModal(true)\r\n            localStorage.setItem(\"ramadanDate\", d)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(showRamadanModal) {\r\n            setTimeout(()=>{\r\n                setShowRamadanModal(false)\r\n            },5000)\r\n        }\r\n    },[showRamadanModal])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.NAMES_OF_ALLAH}>99 Names Of Allah</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Hadiths</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => {toogleSideBarOnOff(false);window.open(\"/PrayerTimings/qaida.pdf\", \"_blank\")}}>\r\n                        {/* <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link> */}\r\n                        <a>Learn Arabic</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Names</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n\r\n            { showRamadanModal && <RamadanModal shouldShow={showRamadanModal} /> }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n"],"names":["getCurrentWaqt","day","moment","Date","format","month","time","x","data","y","Object","keys","map","w","i","console","log","extractErrorMessage","e","defaultMessage","length","err","errArrays","values","errors","msg","errorvalues","k","index","ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","RamadanModal","useState","setDay","useEffect","today","firstDay","diff","src","showConfirmModal","setShowConfirmModal","showRamadanModal","setShowRamadanModal","navigate","useNavigate","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","localStorage","getItem","setItem","JSON","stringify","label","value","date","d","setTimeout","id","style","overflow","fontWeight","color","to","URLS","href","target","window","open","alt"],"sourceRoot":""}