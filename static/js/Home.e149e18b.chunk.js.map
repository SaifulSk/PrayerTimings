{"version":3,"file":"static/js/Home.e149e18b.chunk.js","mappings":"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","sources":["_common/components/form-elements/datepicker/dateInput.tsx","_common/components/form-elements/selectinput/selectElementStyle.tsx","_common/components/form-elements/selectinput/selectElementStyleDark.tsx","_common/components/form-elements/selectinput/selectInput.tsx","config/index.tsx","pages/home/components/StartEndTimeModal.tsx","pages/home/components/NamajTimingForm.tsx","pages/common/Sidebar.tsx","pages/home/home.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport '../form-elem.css'\r\nimport classnames from 'classnames'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface DateInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value: Date | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  dateFormat?: string;\r\n  error?: any;\r\n  id?: string;\r\n  maxDate?: Date;\r\n  minDate?: Date;\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n}\r\n\r\nfunction DateInput({\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  dateFormat,\r\n  maxDate,\r\n  minDate,\r\n  disabled,\r\n  dark,\r\n}: DateInputProps) {\r\n\r\n  const datePickerContainerClass = classnames({\r\n    'ne-datepicker-container': true,\r\n    'dark': dark,\r\n  })\r\n\r\n  return (\r\n    <div className={datePickerContainerClass}>\r\n      <DatePicker\r\n        selected={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        // onFocus={onFocus ? onFocus : () => { }}\r\n        onFocus={e => e.target.blur()}\r\n        placeholderText={placeholder}\r\n        name={name}\r\n        id={id}\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        maxDate={maxDate}\r\n        minDate={minDate}\r\n        // showYearDropdown\r\n        dateFormat={dateFormat}\r\n        className=\"form-control\"\r\n        autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n      />\r\n      <i className=\"date-icon\"></i>\r\n      {\r\n        error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateInput\r\n","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#d71c2d' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#ff606e',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    borderColor: '#cdc6c1',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#cdc6c1',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#c2bfbf',\r\n    fontSize: '18px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '18px',\r\n  }),\r\n}\r\n\r\nexport default styles","// import { Styles, StylesConfig } from 'react-select'\r\n// import { menuListCSS } from 'react-select/src/components/Menu'\r\n\r\nconst styles = {\r\n  option: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ? '#556ee6' : '#FFFFFF',\r\n    ':hover': {\r\n      backgroundColor: '#90a0ee',\r\n      color: '#ffffff'\r\n    },\r\n  }),\r\n  input: (provided:any, state:any) => ({\r\n    ...provided,\r\n      color: '#BFC8E2'\r\n  }),\r\n  menu: (provided:any, state:any) => ({\r\n    ...provided,\r\n    zIndex:999999\r\n  }),\r\n  menuList: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#636363',\r\n    fontSize: '14.4px',\r\n  }),\r\n  control: (provided:any, state:any) => ({\r\n    ...provided,\r\n    height: `calc(1.9em + .94rem + 2px)`,\r\n    borderRadius: '.5rem',\r\n    backgroundColor:'#464D61',\r\n    // color: '#BFC8E2',\r\n    borderColor: '1.5px solid #58627F',\r\n    boxShadow: 'none',\r\n    ':hover': {\r\n      borderColor: '#58627F',\r\n    }\r\n  }),\r\n  indicatorSeparator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    backgroundColor: '#353535'\r\n  }),\r\n  indicatorsContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  valueContainer: (provided:any, state:any) => ({\r\n    ...provided,\r\n  }),\r\n  dropdownIndicator: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#676767'\r\n  }),\r\n  placeholder: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n  singleValue: (provided:any, state:any) => ({\r\n    ...provided,\r\n    color: '#BFC8E2',\r\n    fontSize: '14.4px',\r\n  }),\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport Select, { components } from 'react-select'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\n\r\nimport '../form-elem.css'\r\nimport styles from './selectElementStyle'\r\nimport stylesDark from './selectElementStyleDark'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ninterface OptionValue {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n  onChange: (...args: any) => void;\r\n  onBlur?: () => void;\r\n  options: OptionValue[];\r\n  value: OptionValue | undefined;\r\n  name?: string;\r\n  inputRef?: any;\r\n  placeholder?: string;\r\n  error?: any;\r\n  className?: string;\r\n  id?: string;\r\n  isSearchable?: boolean;\r\n  isClearable?: boolean;\r\n  dark?: boolean;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst DropdownIndicator = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst DropdownIndicatorDark = (props: any) => {\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <AiFillCaretDown style={{\r\n        color: '#353535'\r\n      }} />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst filteOption = (options: any, option: any, inputValue: any) => {\r\n  const { label, value } = option;\r\n  const otherKey = options.filter(\r\n    (opt: any) => opt.label.toLowerCase() === label.toLowerCase() && opt.label.toLowerCase().startsWith(inputValue.toLowerCase())\r\n  );\r\n  return label.toLowerCase().startsWith(inputValue.toLowerCase()) || otherKey.length > 0;\r\n}\r\n\r\nfunction SelectInput({\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  inputRef,\r\n  placeholder,\r\n  error,\r\n  id,\r\n  className,\r\n  options,\r\n  isSearchable,\r\n  isClearable,\r\n  isDisabled,\r\n  dark,\r\n}: SelectInputProps) {\r\n  return (\r\n    <div>\r\n      <Select\r\n        options={options}\r\n        value={value}\r\n        onChange={onChange}\r\n        isClearable={isClearable == undefined ? true : isClearable}\r\n        isSearchable={false}\r\n        styles={dark ? stylesDark : styles}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        className={className}\r\n        id={id}\r\n        ref={inputRef}\r\n        isDisabled={isDisabled}\r\n        placeholder={placeholder}\r\n        // autoComplete={\"no-auto-complete_\" + uuidv4()}\r\n        // components={{ DropdownIndicator }}\r\n        components={{ IndicatorSeparator: () => null }}\r\n        filterOption={(option, InputValue) => filteOption(options, option, InputValue)}\r\n      />\r\n      {\r\n        error && error.value && error.value.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.value.message}\r\n          </Form.Control.Feedback>\r\n        </> : error && error && error.message ? <>\r\n          <Form.Control.Feedback type=\"invalid\" >\r\n            {error.message}\r\n          </Form.Control.Feedback>\r\n        </> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","export const WAQT_OPTIONS = [\n    {value: \"Fajr\", label: \"Fajr\"},\n    {value: \"Duhr\", label: \"Duhr\"},\n    {value: \"Asr\", label: \"Asr\"},\n    {value: \"Maghrib\", label: \"Maghrib\"},\n    {value: \"Isha\", label: \"Isha\"},\n    {value: \"Tahajjud\", label: \"Tahajjud\"},\n]\n\nexport const URLS = {\n    HOME: '/',\n}","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport parse from 'html-react-parser'\nimport data from '../../../config/data.json'\nimport moment from 'moment';\n\ninterface StartEndTimeModalProps {\n    onSuccess?: (success: any) => void;\n    onClose: (success: any) => void;\n    shouldShow: boolean;\n    formValues: any;\n}\n\n\nexport default function StartEndTimeModal({ onSuccess, onClose, shouldShow, formValues }: StartEndTimeModalProps) {\n\n    const [message, setMessage] = useState<string>(\"\")\n\n    useEffect(()=>{\n        if(formValues) {\n            const day = moment(formValues.date).format(\"D\")\n            const month = moment(formValues.date).format(\"MMMM\")\n            const waqt = formValues.waqt.value\n            let x:any = data\n            let msg = \"<p>\"\n            if(x[month][day][waqt][\"Start\"]) {\n                msg = msg + \"Start: <span style='font-weight: bold'>\" + x[month][day][waqt][\"Start\"] + \"</span><br/>\"\n            }\n            if(x[month][day][waqt][\"End\"]) {\n                msg = msg + \"End: <span style='font-weight: bold'>\" + x[month][day][waqt][\"End\"] + \"</span>\"\n            }\n            msg = msg + \"</p>\"\n            setMessage(msg)\n        }\n    },[formValues])\n\n    return (\n        <React.Fragment>\n            <Modal\n                show={shouldShow}\n                backdrop=\"static\"\n                keyboard={false}\n                // className=\"dark-modal\"\n                centered\n                contentClassName='custom-modal'\n            >\n                <Modal.Header>\n                    {moment(formValues.date).format(\"D MMMM \")+formValues?.waqt?.value+\" Timings\"}\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"modal-body\">\n                        {parse(message)}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className=\"btn-wrap mb-3\">\n                        <button type=\"button\"\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\n                            onClick={onClose}>\n                            Close\n                        </button>\n                    </div>\n                    {/* {type==2 && <div className=\"btn-wrap mb-3\">\n                        <button type=\"button\"\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\n                            onClick={onSuccess}>\n                            Leave\n                        </button>\n                    </div>} */}\n                </Modal.Footer>\n            </Modal>\n        </React.Fragment>\n    )\n\n}","import React, { useEffect, useState } from 'react'\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport FormTextInput from '../../../_common/components/form-elements/textinput/formTextInput';\nimport DateInput from '../../../_common/components/form-elements/datepicker/dateInput';\nimport SelectInput from '../../../_common/components/form-elements/selectinput/selectInput';\nimport { WAQT_OPTIONS } from '../../../config';\nimport StartEndTimeModal from './StartEndTimeModal';\n\ninterface UserDetailsFormValues {\n    date: any;\n    waqt: any;\n}\n\nconst userDetailsSchema = yup.object().shape({\n    date: yup\n        .string(),\n    waqt: yup\n        .object()\n        .nullable(),\n})\n\nexport default function NamajTimingForm() {\n\n    const { control, formState: { errors }, formState, setValue, handleSubmit } = useForm<UserDetailsFormValues>({\n        resolver: yupResolver(userDetailsSchema),\n        defaultValues: {\n            date: new Date(),\n            waqt: '',\n        },\n    })\n\n    const [showStartEndTimeModal, setShowStartEndTimeModal] = useState<boolean>(false)\n    const [formValues, setFormValues] = useState<any>()\n\n    const onSubmit = (values: any) => {\n        console.log({values})\n        setShowStartEndTimeModal(true)\n        setFormValues(values)\n    }\n\n    const onCloseStartEndTimeModal = () => {\n        setShowStartEndTimeModal(false)\n    }\n\n    useEffect(()=>{\n        console.log(\"6:51\"<\"6:52\")\n        // let x = \n        // setValue(\"waqt\",{value: x,label: x})\n    },[])\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} noValidate>\n            <div className=\"form-box-new\">\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">Date</label>\n                    {/* <input type=\"date\" className=\"form-control react-datepicker\"/> */}\n                    <Controller\n                        control={control}\n                        name=\"date\"\n                        render={({\n                            field: { onChange, onBlur, value, name, ref },\n                            fieldState: { invalid, isTouched, isDirty, error },\n                            formState,\n                        }) => (\n                            <DateInput\n                                onChange={(e) => {\n                                    onChange(e)\n                                }}\n                                onBlur={onBlur}\n                                value={value}\n                                // maxDate={new Date()}\n                                dateFormat={\"dd-MMMM-yyyy\"}\n                                inputRef={ref}\n                                // error={errors.date}\n                                placeholder=\"Select Date\"\n                            />\n                        )}\n                    />\n                    {/* {errors?.date?.message && <div className=\"invalid-feedback\">{String(errors?.date?.message)}</div>} */}\n                </div>\n                <div className=\"mb-3\">\n                    <label className=\"form-label\">Namaj Waqt</label>\n                    <Controller\n                        control={control}\n                        name=\"waqt\"\n                        render={({\n                            field: { onChange, onBlur, value, name, ref },\n                            fieldState: { invalid, isTouched, isDirty, error },\n                            formState,\n                        }) => (\n                            <SelectInput\n                                name={name}\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                inputRef={ref}\n                                options={WAQT_OPTIONS}\n                                value={value}\n                                // error={errors.waqt}\n                                placeholder=\"Select Waqt\"\n                            />\n                        )}\n                    />\n                </div>\n                <div className=\"btn-wrap\">\n                    <button type=\"submit\" className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\">View Timing</button>\n                </div>\n            </div>\n            {   showStartEndTimeModal && formValues &&\n                <StartEndTimeModal\n                    shouldShow={showStartEndTimeModal}\n                    formValues={formValues}\n                    onClose={onCloseStartEndTimeModal}\n                />\n            }\n        </form>\n    )\n}","import React, { useEffect, useState } from 'react'\n\nfunction Sidebar() {\n\n  return (\n    <section className=\"top-nav\">\n      {/*LEFT MENU*/}\n      {/*Navbar*/}\n      <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\n        <div id=\"dismiss\"\n        // onClick={() => toogleSideBarOnOff(false)}\n        >\n          <i className=\"fa fa-arrow-left\" />\n        </div>\n        <div className=\"sidebar-header\">\n          <img src=\"/images/logo.png\" alt=\"Inside Rodeo\" /> Inside Rodeo\n        </div>\n        {/* {\n          userDetails &&\n          <div className=\"head-user\">\n            Welcome, {userDetails && userDetails.full_name && userDetails.full_name !== \" \" ? userDetails.full_name : ' User'}\n          </div>\n        } */}\n        {/* <ul className=\"list-unstyled components\">\n          <li>\n            <Link to={URLS.HOME}>Rodeo Events</Link>\n          </li>\n          {userDetails ? (\n            <li>\n              <Link to={URLS.USER.PROFILE}>My Profile</Link>\n            </li>\n          ): <li>\n            <Link to={URLS.LOGIN}>Login</Link>\n          </li>\n          }\n          {\n            cmsList && cmsList.length ? \n              cmsList.map((cms: any) =>\n                  <li key={cms.id}>\n                      <a onClick={()=>gotoCmsPage(cms.id)}>\n                          {cms.title}\n                      </a>\n                  </li>\n              )\n            : null\n          }\n          <li>\n            <a href=\"https://sa.insiderodeo.com\" target=\"_blank\">Contact Us</a>\n          </li>\n          {\n            userDetails ?\n              <li>\n                <Link to=\"#\" onClick={(e) => logOut(e)}>Logout</Link>\n              </li> : null\n          }\n\n        </ul> */}\n      </nav>\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container-fluid\">\n          <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\n            <span className=\"open-nav\"\n              // onClick={() => toogleSideBarOnOff(true)}\n            >\n              <img src=\"images/menu.svg\" alt=\"menu\" />\n            </span>\n          </button>\n          {/* {\n            [RODEO_PAGE_NAME.EVENT_GAME_LIST, RODEO_PAGE_NAME.EVENT_GAME_DETAILS].includes(page) && (\n              // statusMessageSelector && statusMessageSelector.status_text &&\n              statusMessageSelector && statusMessageSelector.length &&\n              <div className=\"status-bar-wrap\">\n                <Marquee direction=\"left\" loop={0} pauseOnHover={true} speed={60}>\n                   {statusMessageSelector}\n                </Marquee>\n              </div>\n            )} */}\n\n          {\n            // userDetails &&\n            <button\n              className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarCollapse\"\n              aria-controls=\"navbarCollapse\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              // onClick={toogleProfileMenuBarOnOff}\n              // onClick={goToHome}\n            >\n              <img src=\"images/logo.png\" />\n            </button>\n          }\n        </div>\n      </nav>\n      <div className=\"overlay\" id=\"overlay\"\n        // onClick={() => toogleSideBarOnOff(false)}\n      />\n      {/* IOS Scrren Add to home scrren option popup */}\n      \n    </section>\n  )\n}\n\nexport default Sidebar\n","import React, { useEffect, useState } from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import Sidebar from 'src/components/common/Sidebar'\r\n// import { RODEO_PAGE_NAME, URLS } from 'src/_config'\r\nimport moment from 'moment';\r\nimport NamajTimingForm from './components/NamajTimingForm';\r\nimport Sidebar from '../common/Sidebar';\r\n\r\nexport default function Home() {\r\n\r\n  const day = moment(new Date()).format(\"DD\")\r\n  const month = moment(new Date()).format(\"MMMM\")\r\n  const [time, setTime] = useState<any>()\r\n  \r\n  useEffect(()=>{\r\n  },[])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Sidebar />\r\n      <section className=\"main-container\">\r\n        {/* <h1>Home</h1>\r\n        <h2>Page</h2>\r\n        <h3>{time}</h3> */}\r\n        <NamajTimingForm />\r\n      </section>\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n"],"names":["onChange","onBlur","value","onFocus","name","inputRef","placeholder","error","id","dateFormat","maxDate","minDate","disabled","dark","datePickerContainerClass","classnames","className","selected","e","target","blur","placeholderText","ref","autoComplete","uuidv4","message","Form","type","option","provided","state","backgroundColor","isSelected","color","menu","menuList","fontSize","control","borderColor","boxShadow","indicatorSeparator","valueContainer","dropdownIndicator","singleValue","input","zIndex","height","borderRadius","indicatorsContainer","filteOption","options","inputValue","label","otherKey","filter","opt","toLowerCase","startsWith","length","isClearable","isSearchable","isDisabled","undefined","styles","stylesDark","components","IndicatorSeparator","filterOption","InputValue","WAQT_OPTIONS","StartEndTimeModal","onSuccess","onClose","shouldShow","formValues","useState","setMessage","useEffect","day","moment","date","format","month","waqt","x","data","msg","Modal","show","backdrop","keyboard","centered","contentClassName","parse","onClick","userDetailsSchema","yup","shape","nullable","NamajTimingForm","useForm","resolver","yupResolver","defaultValues","Date","handleSubmit","formState","errors","setValue","showStartEndTimeModal","setShowStartEndTimeModal","setFormValues","console","log","onSubmit","values","noValidate","render","field","fieldState","invalid","isTouched","isDirty","style","overflow","src","alt","Home"],"sourceRoot":""}