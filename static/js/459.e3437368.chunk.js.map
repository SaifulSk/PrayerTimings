{"version":3,"file":"static/js/459.e3437368.chunk.js","mappings":"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","sources":["config/functions.ts","pages/common/ConfirmModal.tsx","pages/home/components/Insights.tsx","pages/home/components/InsightsModal.tsx","pages/common/Sidebar.tsx"],"sourcesContent":["import moment from 'moment';\r\nimport data from './data/data.json'\r\n\r\nexport default function getCurrentWaqt() {\r\n    const day = moment(new Date()).format(\"D\")\r\n    const month = moment(new Date()).format(\"MMMM\")\r\n    const time = moment(new Date()).format(\"HH:mm\")\r\n    let x:any = data\r\n    let y:any = \"Tahajjud\"\r\n    Object.keys(x[month][day]).map((w:any,i:any)=>{\r\n        // console.log(time)\r\n        if(time>=x[month][day][w][\"Start\"]) {\r\n            y=w\r\n        }\r\n    })\r\n    return y\r\n}\r\n\r\nexport const extractErrorMessage = (e: any, defaultMessage = 'Please try again') => {\r\n  if (e && e.data && e.data.length) {\r\n    var err = e.data;\r\n    var errArrays = Object.values(err[0].errors);\r\n    var msg = '';\r\n    errArrays.map(x => {\r\n\r\n      msg = msg + ' ' + x;\r\n    })\r\n    return msg;\r\n  } else if (typeof (e.data) == 'object') {\r\n    var keys = Object.keys(e.data);\r\n    var values = Object.values(e.data);\r\n    var msg = '';\r\n    if (values && values.length) {\r\n      values.map((x: any, i: number) => {\r\n        if (typeof x == 'string') {\r\n          msg = x;\r\n          // return x;\r\n        }\r\n        else {\r\n          let errorvalues = Object.values(x)\r\n          if (errorvalues && errorvalues.length) {\r\n            errorvalues.map((k: any, index: number) => {\r\n              msg = msg + (index + 1) + ' : ' + k + '\\n' + '\\n';\r\n            })\r\n          }\r\n        }\r\n      })\r\n      return msg;\r\n    }\r\n    return defaultMessage\r\n  }\r\n  else if (typeof (e) === 'string') {\r\n    return e\r\n  }\r\n  else {\r\n    return defaultMessage\r\n  }\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"msg-text\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\ninterface InsightsProps {\r\n    type?: string\r\n}\r\n\r\nexport default function Insights({type}: InsightsProps) {\r\n\r\n    return (\r\n        <>\r\n            <h4 className='msg-text'>{type || \"Qur'an\"}</h4>\r\n            <div style={{ height: 230,  textAlign: \"center\" }}>\r\n                <iframe\r\n                    src={\"https://alim.org/\"+(type?.toLowerCase() || \"insight\")+\"-of-the-day/widget/\"}\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    // style={{ border: \"none\" }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport moment from 'moment'\r\nimport Insights from './Insights';\r\n\r\ninterface InsightsModalProps {\r\n    shouldShow: boolean;\r\n    setShowInsightsModal: Function;\r\n}\r\n\r\nexport default function InsightsModal({ shouldShow, setShowInsightsModal }: InsightsModalProps) {\r\n\r\n    useEffect(()=>{\r\n        let x:any=document.getElementById(\"azan\")\r\n        if(x) {\r\n            x.play()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Header>\r\n                    Insights of the Day\r\n                    <button type=\"button\" className=\"\" onClick={() => setShowInsightsModal(false)} style={{background:\"none\",border:\"none\",color:\"#fff\"}}>\r\n                        <i className=\"fa fa-times\" />\r\n                    </button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal-body content\">\r\n                        <Insights />\r\n                        <Insights type=\"Hadith\" />\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport moment from 'moment';\r\nimport RamadanModal from '../home/components/RamadanModal';\r\nimport InsightsModal from '../home/components/InsightsModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const [showRamadanModal,setShowRamadanModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const [showInsightsModal, setShowInsightsModal] = useState<boolean>(false)\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let loc = localStorage.getItem(\"location\")\r\n        if(!loc) {\r\n            localStorage.setItem(\"location\",JSON.stringify({label: \"Kolkata\", value: \"+00:00:00\"}))\r\n        }\r\n    },[])    \r\n\r\n    //Ramadan\r\n    useEffect(()=>{\r\n        // let date = localStorage.getItem(\"ramadanDate\")\r\n        // let d = moment(new Date()).format(\"DD-MM\")\r\n        // if(date) {\r\n        //     if(d!=date) {\r\n        //         setShowRamadanModal(true)\r\n        //         localStorage.setItem(\"ramadanDate\", d)\r\n        //     }\r\n        // } else {\r\n        //     setShowRamadanModal(true)\r\n        //     localStorage.setItem(\"ramadanDate\", d)\r\n        // }\r\n        // // setShowRamadanModal(true)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // if(showRamadanModal) {\r\n        //     setTimeout(()=>{\r\n        //         setShowRamadanModal(false)\r\n        //     },30000)\r\n        // }\r\n    },[showRamadanModal])\r\n\r\n    useEffect(()=>{\r\n        let day = localStorage.getItem(\"day\")\r\n        let today = (new Date()).getDate()+\"\"\r\n        if(day) {\r\n            if(today!=day) {\r\n                setShowInsightsModal(true)\r\n                localStorage.setItem(\"day\",today)\r\n            }\r\n        } else {\r\n            setShowInsightsModal(true)\r\n            localStorage.setItem(\"day\",today)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-times\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{fontWeight: \"bold\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    Islamic <span style={{color:\"#0a9246\"}}>KnowHow</span>\r\n                </div>\r\n                <ul className=\"list-unstyled components\">\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.NAMES_OF_ALLAH}>99 Names Of Allah</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://sunnah.com\" target=\"_blank\">Hadiths</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://myislam.org/qibla-ar\" target=\"_blank\">Qibla Direction</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.DUAS}>Duas</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://www.youtube.com/playlist?list=PLqIZQ02Yb0hmre39-7qk-4e3-eJ4WtM1c\" target=\"_blank\">Prophets' Life Videos</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => {toogleSideBarOnOff(false);window.open(\"/PrayerTimings/qaida.pdf\", \"_blank\")}}>\r\n                        {/* <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link> */}\r\n                        <a>Learn Arabic</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.TASBIH_COUNTER}>Tasbih Counter</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HIJRI_CALENDAR}>Hijri Calendar</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Names</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                        <span className=\"open-nav\"\r\n                            onClick={() => toogleSideBarOnOff(true)}\r\n                        >\r\n                        <img src=\"/PrayerTimings/images/menu.png\" alt=\"menu\" />\r\n                        </span>\r\n                    </button>\r\n                    <button className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\" type=\"button\" onClick={goToHome}>\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            <div className=\"insight-btn-wrap\">\r\n                <button className=\"btn insight-btn\" onClick={()=>setShowInsightsModal(true)}>Insights of the Day</button>\r\n            </div>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must for opening Al Qur'an. Have you done wudu?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            {\r\n                showInsightsModal && \r\n                <InsightsModal\r\n                    shouldShow={showInsightsModal}\r\n                    setShowInsightsModal={setShowInsightsModal}\r\n                />\r\n            }\r\n\r\n            {/* { showRamadanModal &&\r\n                <RamadanModal\r\n                    shouldShow={showRamadanModal}\r\n                    setShowRamadanModal={setShowRamadanModal}\r\n                />\r\n            } */}\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n"],"names":["getCurrentWaqt","day","moment","Date","format","month","time","x","data","y","Object","keys","map","w","i","extractErrorMessage","e","defaultMessage","length","err","errArrays","values","errors","msg","errorvalues","k","index","ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","Insights","style","height","textAlign","src","toLowerCase","width","InsightsModal","setShowInsightsModal","useEffect","document","getElementById","play","background","border","color","useState","showConfirmModal","setShowConfirmModal","showRamadanModal","navigate","useNavigate","showInsightsModal","toogleSideBarOnOff","status","sidebarCollapseElement","sidebarElement","overlayElement","classList","add","remove","localStorage","getItem","setItem","JSON","stringify","label","value","today","getDate","id","overflow","fontWeight","to","URLS","href","target","window","open","alt"],"sourceRoot":""}