{"version":3,"file":"static/js/LearnArabic.e37ecd3a.chunk.js","mappings":"4NAYe,SAASA,EAAa,GAAuE,IAArEC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAE5E,OACI,SAAC,WAAc,WACX,UAACC,EAAA,EAAK,CACFC,KAAMJ,EACNK,SAAS,SACTC,UAAU,EAEVC,UAAQ,EACRC,iBAAiB,eAAc,WAE/B,SAACL,EAAA,OAAU,WACP,gBAAKM,UAAU,aAAY,UACvB,eAAIA,UAAU,qBAAoB,SAAER,SAG5C,UAACE,EAAA,SAAY,YACT,gBAAKM,UAAU,gBAAe,UAC1B,mBAAQP,KAAK,SACTO,UAAU,sDACVC,QAASX,EAAQ,SACV,GAANG,EAAU,KAAO,SAGnB,GAANA,IAAW,gBAAKO,UAAU,gBAAe,UACtC,mBAAQP,KAAK,SACTO,UAAU,mDACVC,QAASZ,EAAU,SAAC,iBAShD,CC+GA,MA3JA,WAEI,OAA+Ca,EAAAA,EAAAA,WAAkB,GAAM,eAAhEC,EAAgB,KAACC,EAAmB,KACrCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAqB,SAACC,GACxB,IAAIC,EAAyBC,SAASC,eAAe,mBACjDC,EAAiBF,SAASC,eAAe,WACzCE,EAAiBH,SAASC,eAAe,WACzCH,EACIC,IACc,OAAdG,QAAc,IAAdA,GAAAA,EAAgBE,UAAUC,IAAI,UAChB,OAAdF,QAAc,IAAdA,GAAAA,EAAgBC,UAAUC,IAAI,WAG9BN,IACc,OAAdG,QAAc,IAAdA,GAAAA,EAAgBE,UAAUE,OAAO,UACnB,OAAdH,QAAc,IAAdA,GAAAA,EAAgBC,UAAUE,OAAO,UAG7C,EAkBA,OACI,qBAAShB,UAAU,UAAS,WAGxB,iBAAKiB,GAAG,UAAUjB,UAAU,wDAAwDkB,MAAO,CAAEC,SAAU,WAAY,WAC/G,gBAAKF,GAAG,UAAUhB,QAAS,kBAAMM,GAAmB,EAAM,EAAC,UACvD,cAAGP,UAAU,wBAEjB,iBAAKA,UAAU,iBAAiBkB,MAAO,CAACE,MAAM,QAAQ,WAElD,iBAAMF,MAAO,CAACE,MAAM,UAAUC,WAAY,QAAQ,SAAC,aAAe,eAQtE,gBAAIrB,UAAU,2BAA0B,WAuBpC,eAAIC,QAAS,kBAAMM,GAAmB,EAAM,EAAC,UACzC,cAAGN,QA1DE,WACrBG,GAAoB,EACxB,EAwDiD,SAAC,uBAElC,eAAIH,QAAS,kBAAMM,GAAmB,EAAM,EAAC,UACzC,SAAC,KAAI,CAACe,GAAIC,EAAAA,EAAAA,KAAU,SAAC,sBAEzB,eAAItB,QAAS,kBAAMM,GAAmB,EAAM,EAAC,UACzC,cAAGiB,KAAK,0BAA0BC,OAAO,SAAQ,SAAC,yBAEtD,eAAIxB,QAAS,kBAAMM,GAAmB,EAAM,EAAC,UACzC,SAAC,KAAI,CAACe,GAAIC,EAAAA,EAAAA,aAAkB,SAAC,0BAWzC,gBAAKvB,UAAU,sBAAqB,UAChC,iBAAKA,UAAU,kBAAiB,WAChC,mBAAQP,KAAK,SAASwB,GAAG,kBAAkBjB,UAAU,WAAU,UAC3D,iBAAMA,UAAU,WACZC,QAAS,kBAAMM,GAAmB,EAAK,EAAC,UAE5C,gBAAKmB,IAAI,iCAAiCC,IAAI,cAgB9C,mBACA3B,UAAU,4DACVP,KAAK,SACL,iBAAe,WACf,iBAAe,kBACf,gBAAc,iBACd,gBAAc,QACd,aAAW,oBAEXQ,QAjGC,WACbI,EAASkB,EAAAA,EAAAA,KACb,EA+FkC,UAEd,gBAAKG,IAAI,2CAKrB,gBAAK1B,UAAU,UAAUiB,GAAG,UAAUhB,QAAS,kBAAMM,GAAmB,EAAM,IAG1EJ,IACI,SAACf,EAAY,CACTG,WAAYY,EACZb,QAtHQ,WACxBc,GAAoB,EACxB,EAqHoBf,UAnHU,WAC1BuC,OAAOC,KAAK,oBAAoB,SACpC,EAkHoBrC,QAAS,mDACTC,KAAM,MAM9B,C,qGC1Je,SAASqC,IACpB,OACI,UAAC,WAAc,YACX,SAAC,IAAO,KACR,qBAAS9B,UAAU,iBAAgB,WAC/B,eAAIA,UAAU,aAAY,SAAC,kBAC3B,gBAAK0B,IAAK,oCAAqCR,MAAO,CAACa,MAAM,OAAOC,UAAU,eAI9F,C","sources":["pages/home/components/ConfirmModal.tsx","pages/common/Sidebar.tsx","pages/learnArabic/learnArabic.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface ConfirmModalProps {\r\n    onSuccess?: (success: any) => void;\r\n    onClose: (success: any) => void;\r\n    shouldShow: boolean;\r\n    message: any;\r\n    type: number;\r\n}\r\n\r\n\r\nexport default function ConfirmModal({ onSuccess, onClose, shouldShow, message, type }: ConfirmModalProps) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={shouldShow}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                // className=\"dark-modal\"\r\n                centered\r\n                contentClassName='custom-modal'\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modal-body\">\r\n                        <h4 className=\"rider-name-content\">{message}</h4>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-orange ripple-effect w-100 mt-3\"\r\n                            onClick={onClose}>\r\n                            {type==2 ? \"No\" : \"Ok\" }\r\n                        </button>\r\n                    </div>\r\n                    {type==2 && <div className=\"btn-wrap mb-3\">\r\n                        <button type=\"button\"\r\n                            className=\"rkmd-btn btn-lg btn-red ripple-effect w-100 mt-3\"\r\n                            onClick={onSuccess}>\r\n                            Yes\r\n                        </button>\r\n                    </div>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { URLS } from '../../config';\r\nimport ConfirmModal from '../home/components/ConfirmModal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [showConfirmModal,setShowConfirmModal] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n\r\n    const toogleSideBarOnOff = (status: boolean) => {\r\n        var sidebarCollapseElement = document.getElementById(\"sidebarCollapse\");\r\n        var sidebarElement = document.getElementById(\"sidebar\");\r\n        var overlayElement = document.getElementById(\"overlay\");\r\n        if (status) {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.add(\"active\");\r\n                overlayElement?.classList.add(\"active\");\r\n            }\r\n        } else {\r\n            if (sidebarCollapseElement) {\r\n                sidebarElement?.classList.remove(\"active\");\r\n                overlayElement?.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const openConfirmModal = () => {\r\n        setShowConfirmModal(true)\r\n    }\r\n\r\n    const onConfirmModalClose = () => {\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    const onConfirmModalSuccess = () => {\r\n        window.open(\"https://quran.com\",\"_blank\")\r\n    }\r\n\r\n    const goToHome = () => {\r\n        navigate(URLS.HOME)\r\n    }\r\n\r\n    return (\r\n        <section className=\"top-nav\">\r\n            {/*LEFT MENU*/}\r\n            {/*Navbar*/}\r\n            <nav id=\"sidebar\" className=\"mCustomScrollbar _mCS_1 mCS-autoHide mCS_no_scrollbar\" style={{ overflow: 'visible' }}>\r\n                <div id=\"dismiss\" onClick={() => toogleSideBarOnOff(false)}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </div>\r\n                <div className=\"sidebar-header\" style={{color:\"#000\"}}>\r\n                    {/* <img src=\"/PrayerTimings/images/logo.png\" alt=\"\" /> */}\r\n                    <span style={{color:\"#0a9246\",fontWeight: \"bold\"}}>Islamic </span>Know How\r\n                </div>\r\n                {/* {\r\n                    userDetails &&\r\n                    <div className=\"head-user\">\r\n                        Welcome, {userDetails && userDetails.full_name && userDetails.full_name !== \" \" ? userDetails.full_name : ' User'}\r\n                    </div>\r\n                } */}\r\n                <ul className=\"list-unstyled components\">\r\n                    {/* <li>\r\n                        <Link to={URLS.HOME}>Rodeo Events</Link>\r\n                    </li>\r\n                    {userDetails ? (\r\n                        <li>\r\n                        <Link to={URLS.USER.PROFILE}>My Profile</Link>\r\n                        </li>\r\n                    ): <li>\r\n                        <Link to={URLS.LOGIN}>Login</Link>\r\n                    </li>\r\n                    }\r\n                    {\r\n                        cmsList && cmsList.length ? \r\n                        cmsList.map((cms: any) =>\r\n                            <li key={cms.id}>\r\n                                <a onClick={()=>gotoCmsPage(cms.id)}>\r\n                                    {cms.title}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                        : null\r\n                    } */}\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a onClick={openConfirmModal}>Go to Quran.com</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.HOME}>Prayer Timings</Link>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <a href=\"https://muslimnames.com\" target=\"_blank\">Muslim Baby Names</a>\r\n                    </li>\r\n                    <li onClick={() => toogleSideBarOnOff(false)}>\r\n                        <Link to={URLS.LEARN_ARABIC}>Learn Arabic</Link>\r\n                    </li>\r\n                    {/* {\r\n                        userDetails ?\r\n                        <li>\r\n                            <Link to=\"#\" onClick={(e) => logOut(e)}>Logout</Link>\r\n                        </li> : null\r\n                    } */}\r\n\r\n                </ul>\r\n            </nav>\r\n            <nav className=\"navbar navbar-light\">\r\n                <div className=\"container-fluid\">\r\n                <button type=\"button\" id=\"sidebarCollapse\" className=\"btn-none\">\r\n                    <span className=\"open-nav\"\r\n                        onClick={() => toogleSideBarOnOff(true)}\r\n                    >\r\n                    <img src=\"/PrayerTimings/images/menu.svg\" alt=\"menu\" />\r\n                    </span>\r\n                </button>\r\n                {/* {\r\n                    [RODEO_PAGE_NAME.EVENT_GAME_LIST, RODEO_PAGE_NAME.EVENT_GAME_DETAILS].includes(page) && (\r\n                    // statusMessageSelector && statusMessageSelector.status_text &&\r\n                    statusMessageSelector && statusMessageSelector.length &&\r\n                    <div className=\"status-bar-wrap\">\r\n                        <Marquee direction=\"left\" loop={0} pauseOnHover={true} speed={60}>\r\n                        {statusMessageSelector}\r\n                        </Marquee>\r\n                    </div>\r\n                    )} */}\r\n\r\n                {\r\n                    // userDetails &&\r\n                    <button\r\n                    className=\"navbar-toggler btn-none d-inline-block ml-auto user-image\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarCollapse\"\r\n                    aria-controls=\"navbarCollapse\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                    // onClick={toogleProfileMenuBarOnOff}\r\n                    onClick={goToHome}\r\n                    >\r\n                        <img src=\"/PrayerTimings/images/logo.png\" />\r\n                    </button>\r\n                }\r\n                </div>\r\n            </nav>\r\n            <div className=\"overlay\" id=\"overlay\" onClick={() => toogleSideBarOnOff(false)} />\r\n            {/* IOS Scrren Add to home scrren option popup */}\r\n            {\r\n                showConfirmModal &&\r\n                    <ConfirmModal\r\n                        shouldShow={showConfirmModal}\r\n                        onClose={onConfirmModalClose}\r\n                        onSuccess={onConfirmModalSuccess}\r\n                        message={\"Wudu is must before opening this. Are you ready?\"}\r\n                        type={2}\r\n                    />\r\n            }\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","\r\nimport React from 'react'\r\nimport Sidebar from '../common/Sidebar'\r\n\r\nexport default function LearnArabic() {\r\n    return (\r\n        <React.Fragment>\r\n            <Sidebar />\r\n            <section className=\"main-container\">\r\n                <h2 className=\"page-title\">Learn Arabic</h2>\r\n                <img src={\"/PrayerTimings/images/letters.jpg\"} style={{width:\"100%\",marginTop:\"25px\"}}/>              \r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"],"names":["ConfirmModal","onSuccess","onClose","shouldShow","message","type","Modal","show","backdrop","keyboard","centered","contentClassName","className","onClick","useState","showConfirmModal","setShowConfirmModal","navigate","useNavigate","toogleSideBarOnOff","status","sidebarCollapseElement","document","getElementById","sidebarElement","overlayElement","classList","add","remove","id","style","overflow","color","fontWeight","to","URLS","href","target","src","alt","window","open","LearnArabic","width","marginTop"],"sourceRoot":""}